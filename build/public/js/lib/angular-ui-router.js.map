{"version":3,"sources":["../../../../../../public/js/lib/angular-ui-router.js"],"names":[],"mappings":"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","file":"angular-ui-router.js","sourcesContent":["/**\r\n * State-based routing for AngularJS\r\n * @version v0.2.13\r\n * @link http://angular-ui.github.com/\r\n * @license MIT License, http://www.opensource.org/licenses/MIT\r\n */\r\n\r\n/* commonjs package manager support (eg componentjs) */\r\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\r\n  module.exports = 'ui.router';\r\n}\r\n\r\n(function (window, angular, undefined) {\r\n/*jshint globalstrict:true*/\r\n/*global angular:false*/\r\n'use strict';\r\n\r\nvar isDefined = angular.isDefined,\r\n    isFunction = angular.isFunction,\r\n    isString = angular.isString,\r\n    isObject = angular.isObject,\r\n    isArray = angular.isArray,\r\n    forEach = angular.forEach,\r\n    extend = angular.extend,\r\n    copy = angular.copy;\r\n\r\nfunction inherit(parent, extra) {\r\n  return extend(new (extend(function() {}, { prototype: parent }))(), extra);\r\n}\r\n\r\nfunction merge(dst) {\r\n  forEach(arguments, function(obj) {\r\n    if (obj !== dst) {\r\n      forEach(obj, function(value, key) {\r\n        if (!dst.hasOwnProperty(key)) dst[key] = value;\r\n      });\r\n    }\r\n  });\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Finds the common ancestor path between two states.\r\n *\r\n * @param {Object} first The first state.\r\n * @param {Object} second The second state.\r\n * @return {Array} Returns an array of state names in descending order, not including the root.\r\n */\r\nfunction ancestors(first, second) {\r\n  var path = [];\r\n\r\n  for (var n in first.path) {\r\n    if (first.path[n] !== second.path[n]) break;\r\n    path.push(first.path[n]);\r\n  }\r\n  return path;\r\n}\r\n\r\n/**\r\n * IE8-safe wrapper for `Object.keys()`.\r\n *\r\n * @param {Object} object A JavaScript object.\r\n * @return {Array} Returns the keys of the object as an array.\r\n */\r\nfunction objectKeys(object) {\r\n  if (Object.keys) {\r\n    return Object.keys(object);\r\n  }\r\n  var result = [];\r\n\r\n  angular.forEach(object, function(val, key) {\r\n    result.push(key);\r\n  });\r\n  return result;\r\n}\r\n\r\n/**\r\n * IE8-safe wrapper for `Array.prototype.indexOf()`.\r\n *\r\n * @param {Array} array A JavaScript array.\r\n * @param {*} value A value to search the array for.\r\n * @return {Number} Returns the array index value of `value`, or `-1` if not present.\r\n */\r\nfunction indexOf(array, value) {\r\n  if (Array.prototype.indexOf) {\r\n    return array.indexOf(value, Number(arguments[2]) || 0);\r\n  }\r\n  var len = array.length >>> 0, from = Number(arguments[2]) || 0;\r\n  from = (from < 0) ? Math.ceil(from) : Math.floor(from);\r\n\r\n  if (from < 0) from += len;\r\n\r\n  for (; from < len; from++) {\r\n    if (from in array && array[from] === value) return from;\r\n  }\r\n  return -1;\r\n}\r\n\r\n/**\r\n * Merges a set of parameters with all parameters inherited between the common parents of the\r\n * current state and a given destination state.\r\n *\r\n * @param {Object} currentParams The value of the current state parameters ($stateParams).\r\n * @param {Object} newParams The set of parameters which will be composited with inherited params.\r\n * @param {Object} $current Internal definition of object representing the current state.\r\n * @param {Object} $to Internal definition of object representing state to transition to.\r\n */\r\nfunction inheritParams(currentParams, newParams, $current, $to) {\r\n  var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\r\n\r\n  for (var i in parents) {\r\n    if (!parents[i].params) continue;\r\n    parentParams = objectKeys(parents[i].params);\r\n    if (!parentParams.length) continue;\r\n\r\n    for (var j in parentParams) {\r\n      if (indexOf(inheritList, parentParams[j]) >= 0) continue;\r\n      inheritList.push(parentParams[j]);\r\n      inherited[parentParams[j]] = currentParams[parentParams[j]];\r\n    }\r\n  }\r\n  return extend({}, inherited, newParams);\r\n}\r\n\r\n/**\r\n * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.\r\n *\r\n * @param {Object} a The first object.\r\n * @param {Object} b The second object.\r\n * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,\r\n *                     it defaults to the list of keys in `a`.\r\n * @return {Boolean} Returns `true` if the keys match, otherwise `false`.\r\n */\r\nfunction equalForKeys(a, b, keys) {\r\n  if (!keys) {\r\n    keys = [];\r\n    for (var n in a) keys.push(n); // Used instead of Object.keys() for IE8 compatibility\r\n  }\r\n\r\n  for (var i=0; i<keys.length; i++) {\r\n    var k = keys[i];\r\n    if (a[k] != b[k]) return false; // Not '===', values aren't necessarily normalized\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Returns the subset of an object, based on a list of keys.\r\n *\r\n * @param {Array} keys\r\n * @param {Object} values\r\n * @return {Boolean} Returns a subset of `values`.\r\n */\r\nfunction filterByKeys(keys, values) {\r\n  var filtered = {};\r\n\r\n  forEach(keys, function (name) {\r\n    filtered[name] = values[name];\r\n  });\r\n  return filtered;\r\n}\r\n\r\n// like _.indexBy\r\n// when you know that your index values will be unique, or you want last-one-in to win\r\nfunction indexBy(array, propName) {\r\n  var result = {};\r\n  forEach(array, function(item) {\r\n    result[item[propName]] = item;\r\n  });\r\n  return result;\r\n}\r\n\r\n// extracted from underscore.js\r\n// Return a copy of the object only containing the whitelisted properties.\r\nfunction pick(obj) {\r\n  var copy = {};\r\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\r\n  forEach(keys, function(key) {\r\n    if (key in obj) copy[key] = obj[key];\r\n  });\r\n  return copy;\r\n}\r\n\r\n// extracted from underscore.js\r\n// Return a copy of the object omitting the blacklisted properties.\r\nfunction omit(obj) {\r\n  var copy = {};\r\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\r\n  for (var key in obj) {\r\n    if (indexOf(keys, key) == -1) copy[key] = obj[key];\r\n  }\r\n  return copy;\r\n}\r\n\r\nfunction pluck(collection, key) {\r\n  var result = isArray(collection) ? [] : {};\r\n\r\n  forEach(collection, function(val, i) {\r\n    result[i] = isFunction(key) ? key(val) : val[key];\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction filter(collection, callback) {\r\n  var array = isArray(collection);\r\n  var result = array ? [] : {};\r\n  forEach(collection, function(val, i) {\r\n    if (callback(val, i)) {\r\n      result[array ? result.length : i] = val;\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction map(collection, callback) {\r\n  var result = isArray(collection) ? [] : {};\r\n\r\n  forEach(collection, function(val, i) {\r\n    result[i] = callback(val, i);\r\n  });\r\n  return result;\r\n}\r\n\r\n/**\r\n * @ngdoc overview\r\n * @name ui.router.util\r\n *\r\n * @description\r\n * # ui.router.util sub-module\r\n *\r\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\r\n * in your angular app (use {@link ui.router} module instead).\r\n *\r\n */\r\nangular.module('ui.router.util', ['ng']);\r\n\r\n/**\r\n * @ngdoc overview\r\n * @name ui.router.router\r\n * \r\n * @requires ui.router.util\r\n *\r\n * @description\r\n * # ui.router.router sub-module\r\n *\r\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\r\n * in your angular app (use {@link ui.router} module instead).\r\n */\r\nangular.module('ui.router.router', ['ui.router.util']);\r\n\r\n/**\r\n * @ngdoc overview\r\n * @name ui.router.state\r\n * \r\n * @requires ui.router.router\r\n * @requires ui.router.util\r\n *\r\n * @description\r\n * # ui.router.state sub-module\r\n *\r\n * This module is a dependency of the main ui.router module. Do not include this module as a dependency\r\n * in your angular app (use {@link ui.router} module instead).\r\n * \r\n */\r\nangular.module('ui.router.state', ['ui.router.router', 'ui.router.util']);\r\n\r\n/**\r\n * @ngdoc overview\r\n * @name ui.router\r\n *\r\n * @requires ui.router.state\r\n *\r\n * @description\r\n * # ui.router\r\n * \r\n * ## The main module for ui.router \r\n * There are several sub-modules included with the ui.router module, however only this module is needed\r\n * as a dependency within your angular app. The other modules are for organization purposes. \r\n *\r\n * The modules are:\r\n * * ui.router - the main \"umbrella\" module\r\n * * ui.router.router - \r\n * \r\n * *You'll need to include **only** this module as the dependency within your angular app.*\r\n * \r\n * <pre>\r\n * <!doctype html>\r\n * <html ng-app=\"myApp\">\r\n * <head>\r\n *   <script src=\"js/angular.js\"></script>\r\n *   <!-- Include the ui-router script -->\r\n *   <script src=\"js/angular-ui-router.min.js\"></script>\r\n *   <script>\r\n *     // ...and add 'ui.router' as a dependency\r\n *     var myApp = angular.module('myApp', ['ui.router']);\r\n *   </script>\r\n * </head>\r\n * <body>\r\n * </body>\r\n * </html>\r\n * </pre>\r\n */\r\nangular.module('ui.router', ['ui.router.state']);\r\n\r\nangular.module('ui.router.compat', ['ui.router']);\r\n\r\n/**\r\n * @ngdoc object\r\n * @name ui.router.util.$resolve\r\n *\r\n * @requires $q\r\n * @requires $injector\r\n *\r\n * @description\r\n * Manages resolution of (acyclic) graphs of promises.\r\n */\r\n$Resolve.$inject = ['$q', '$injector'];\r\nfunction $Resolve(  $q,    $injector) {\r\n  \r\n  var VISIT_IN_PROGRESS = 1,\r\n      VISIT_DONE = 2,\r\n      NOTHING = {},\r\n      NO_DEPENDENCIES = [],\r\n      NO_LOCALS = NOTHING,\r\n      NO_PARENT = extend($q.when(NOTHING), { $$promises: NOTHING, $$values: NOTHING });\r\n  \r\n\r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.util.$resolve#study\r\n   * @methodOf ui.router.util.$resolve\r\n   *\r\n   * @description\r\n   * Studies a set of invocables that are likely to be used multiple times.\r\n   * <pre>\r\n   * $resolve.study(invocables)(locals, parent, self)\r\n   * </pre>\r\n   * is equivalent to\r\n   * <pre>\r\n   * $resolve.resolve(invocables, locals, parent, self)\r\n   * </pre>\r\n   * but the former is more efficient (in fact `resolve` just calls `study` \r\n   * internally).\r\n   *\r\n   * @param {object} invocables Invocable objects\r\n   * @return {function} a function to pass in locals, parent and self\r\n   */\r\n  this.study = function (invocables) {\r\n    if (!isObject(invocables)) throw new Error(\"'invocables' must be an object\");\r\n    var invocableKeys = objectKeys(invocables || {});\r\n    \r\n    // Perform a topological sort of invocables to build an ordered plan\r\n    var plan = [], cycle = [], visited = {};\r\n    function visit(value, key) {\r\n      if (visited[key] === VISIT_DONE) return;\r\n      \r\n      cycle.push(key);\r\n      if (visited[key] === VISIT_IN_PROGRESS) {\r\n        cycle.splice(0, indexOf(cycle, key));\r\n        throw new Error(\"Cyclic dependency: \" + cycle.join(\" -> \"));\r\n      }\r\n      visited[key] = VISIT_IN_PROGRESS;\r\n      \r\n      if (isString(value)) {\r\n        plan.push(key, [ function() { return $injector.get(value); }], NO_DEPENDENCIES);\r\n      } else {\r\n        var params = $injector.annotate(value);\r\n        forEach(params, function (param) {\r\n          if (param !== key && invocables.hasOwnProperty(param)) visit(invocables[param], param);\r\n        });\r\n        plan.push(key, value, params);\r\n      }\r\n      \r\n      cycle.pop();\r\n      visited[key] = VISIT_DONE;\r\n    }\r\n    forEach(invocables, visit);\r\n    invocables = cycle = visited = null; // plan is all that's required\r\n    \r\n    function isResolve(value) {\r\n      return isObject(value) && value.then && value.$$promises;\r\n    }\r\n    \r\n    return function (locals, parent, self) {\r\n      if (isResolve(locals) && self === undefined) {\r\n        self = parent; parent = locals; locals = null;\r\n      }\r\n      if (!locals) locals = NO_LOCALS;\r\n      else if (!isObject(locals)) {\r\n        throw new Error(\"'locals' must be an object\");\r\n      }       \r\n      if (!parent) parent = NO_PARENT;\r\n      else if (!isResolve(parent)) {\r\n        throw new Error(\"'parent' must be a promise returned by $resolve.resolve()\");\r\n      }\r\n      \r\n      // To complete the overall resolution, we have to wait for the parent\r\n      // promise and for the promise for each invokable in our plan.\r\n      var resolution = $q.defer(),\r\n          result = resolution.promise,\r\n          promises = result.$$promises = {},\r\n          values = extend({}, locals),\r\n          wait = 1 + plan.length/3,\r\n          merged = false;\r\n          \r\n      function done() {\r\n        // Merge parent values we haven't got yet and publish our own $$values\r\n        if (!--wait) {\r\n          if (!merged) merge(values, parent.$$values); \r\n          result.$$values = values;\r\n          result.$$promises = result.$$promises || true; // keep for isResolve()\r\n          delete result.$$inheritedValues;\r\n          resolution.resolve(values);\r\n        }\r\n      }\r\n      \r\n      function fail(reason) {\r\n        result.$$failure = reason;\r\n        resolution.reject(reason);\r\n      }\r\n\r\n      // Short-circuit if parent has already failed\r\n      if (isDefined(parent.$$failure)) {\r\n        fail(parent.$$failure);\r\n        return result;\r\n      }\r\n      \r\n      if (parent.$$inheritedValues) {\r\n        merge(values, omit(parent.$$inheritedValues, invocableKeys));\r\n      }\r\n\r\n      // Merge parent values if the parent has already resolved, or merge\r\n      // parent promises and wait if the parent resolve is still in progress.\r\n      extend(promises, parent.$$promises);\r\n      if (parent.$$values) {\r\n        merged = merge(values, omit(parent.$$values, invocableKeys));\r\n        result.$$inheritedValues = omit(parent.$$values, invocableKeys);\r\n        done();\r\n      } else {\r\n        if (parent.$$inheritedValues) {\r\n          result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys);\r\n        }        \r\n        parent.then(done, fail);\r\n      }\r\n      \r\n      // Process each invocable in the plan, but ignore any where a local of the same name exists.\r\n      for (var i=0, ii=plan.length; i<ii; i+=3) {\r\n        if (locals.hasOwnProperty(plan[i])) done();\r\n        else invoke(plan[i], plan[i+1], plan[i+2]);\r\n      }\r\n      \r\n      function invoke(key, invocable, params) {\r\n        // Create a deferred for this invocation. Failures will propagate to the resolution as well.\r\n        var invocation = $q.defer(), waitParams = 0;\r\n        function onfailure(reason) {\r\n          invocation.reject(reason);\r\n          fail(reason);\r\n        }\r\n        // Wait for any parameter that we have a promise for (either from parent or from this\r\n        // resolve; in that case study() will have made sure it's ordered before us in the plan).\r\n        forEach(params, function (dep) {\r\n          if (promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep)) {\r\n            waitParams++;\r\n            promises[dep].then(function (result) {\r\n              values[dep] = result;\r\n              if (!(--waitParams)) proceed();\r\n            }, onfailure);\r\n          }\r\n        });\r\n        if (!waitParams) proceed();\r\n        function proceed() {\r\n          if (isDefined(result.$$failure)) return;\r\n          try {\r\n            invocation.resolve($injector.invoke(invocable, self, values));\r\n            invocation.promise.then(function (result) {\r\n              values[key] = result;\r\n              done();\r\n            }, onfailure);\r\n          } catch (e) {\r\n            onfailure(e);\r\n          }\r\n        }\r\n        // Publish promise synchronously; invocations further down in the plan may depend on it.\r\n        promises[key] = invocation.promise;\r\n      }\r\n      \r\n      return result;\r\n    };\r\n  };\r\n  \r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.util.$resolve#resolve\r\n   * @methodOf ui.router.util.$resolve\r\n   *\r\n   * @description\r\n   * Resolves a set of invocables. An invocable is a function to be invoked via \r\n   * `$injector.invoke()`, and can have an arbitrary number of dependencies. \r\n   * An invocable can either return a value directly,\r\n   * or a `$q` promise. If a promise is returned it will be resolved and the \r\n   * resulting value will be used instead. Dependencies of invocables are resolved \r\n   * (in this order of precedence)\r\n   *\r\n   * - from the specified `locals`\r\n   * - from another invocable that is part of this `$resolve` call\r\n   * - from an invocable that is inherited from a `parent` call to `$resolve` \r\n   *   (or recursively\r\n   * - from any ancestor `$resolve` of that parent).\r\n   *\r\n   * The return value of `$resolve` is a promise for an object that contains \r\n   * (in this order of precedence)\r\n   *\r\n   * - any `locals` (if specified)\r\n   * - the resolved return values of all injectables\r\n   * - any values inherited from a `parent` call to `$resolve` (if specified)\r\n   *\r\n   * The promise will resolve after the `parent` promise (if any) and all promises \r\n   * returned by injectables have been resolved. If any invocable \r\n   * (or `$injector.invoke`) throws an exception, or if a promise returned by an \r\n   * invocable is rejected, the `$resolve` promise is immediately rejected with the \r\n   * same error. A rejection of a `parent` promise (if specified) will likewise be \r\n   * propagated immediately. Once the `$resolve` promise has been rejected, no \r\n   * further invocables will be called.\r\n   * \r\n   * Cyclic dependencies between invocables are not permitted and will caues `$resolve`\r\n   * to throw an error. As a special case, an injectable can depend on a parameter \r\n   * with the same name as the injectable, which will be fulfilled from the `parent` \r\n   * injectable of the same name. This allows inherited values to be decorated. \r\n   * Note that in this case any other injectable in the same `$resolve` with the same\r\n   * dependency would see the decorated value, not the inherited value.\r\n   *\r\n   * Note that missing dependencies -- unlike cyclic dependencies -- will cause an \r\n   * (asynchronous) rejection of the `$resolve` promise rather than a (synchronous) \r\n   * exception.\r\n   *\r\n   * Invocables are invoked eagerly as soon as all dependencies are available. \r\n   * This is true even for dependencies inherited from a `parent` call to `$resolve`.\r\n   *\r\n   * As a special case, an invocable can be a string, in which case it is taken to \r\n   * be a service name to be passed to `$injector.get()`. This is supported primarily \r\n   * for backwards-compatibility with the `resolve` property of `$routeProvider` \r\n   * routes.\r\n   *\r\n   * @param {object} invocables functions to invoke or \r\n   * `$injector` services to fetch.\r\n   * @param {object} locals  values to make available to the injectables\r\n   * @param {object} parent  a promise returned by another call to `$resolve`.\r\n   * @param {object} self  the `this` for the invoked methods\r\n   * @return {object} Promise for an object that contains the resolved return value\r\n   * of all invocables, as well as any inherited and local values.\r\n   */\r\n  this.resolve = function (invocables, locals, parent, self) {\r\n    return this.study(invocables)(locals, parent, self);\r\n  };\r\n}\r\n\r\nangular.module('ui.router.util').service('$resolve', $Resolve);\r\n\r\n\r\n/**\r\n * @ngdoc object\r\n * @name ui.router.util.$templateFactory\r\n *\r\n * @requires $http\r\n * @requires $templateCache\r\n * @requires $injector\r\n *\r\n * @description\r\n * Service. Manages loading of templates.\r\n */\r\n$TemplateFactory.$inject = ['$http', '$templateCache', '$injector'];\r\nfunction $TemplateFactory(  $http,   $templateCache,   $injector) {\r\n\r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.util.$templateFactory#fromConfig\r\n   * @methodOf ui.router.util.$templateFactory\r\n   *\r\n   * @description\r\n   * Creates a template from a configuration object. \r\n   *\r\n   * @param {object} config Configuration object for which to load a template. \r\n   * The following properties are search in the specified order, and the first one \r\n   * that is defined is used to create the template:\r\n   *\r\n   * @param {string|object} config.template html string template or function to \r\n   * load via {@link ui.router.util.$templateFactory#fromString fromString}.\r\n   * @param {string|object} config.templateUrl url to load or a function returning \r\n   * the url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.\r\n   * @param {Function} config.templateProvider function to invoke via \r\n   * {@link ui.router.util.$templateFactory#fromProvider fromProvider}.\r\n   * @param {object} params  Parameters to pass to the template function.\r\n   * @param {object} locals Locals to pass to `invoke` if the template is loaded \r\n   * via a `templateProvider`. Defaults to `{ params: params }`.\r\n   *\r\n   * @return {string|object}  The template html as a string, or a promise for \r\n   * that string,or `null` if no template is configured.\r\n   */\r\n  this.fromConfig = function (config, params, locals) {\r\n    return (\r\n      isDefined(config.template) ? this.fromString(config.template, params) :\r\n      isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) :\r\n      isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) :\r\n      null\r\n    );\r\n  };\r\n\r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.util.$templateFactory#fromString\r\n   * @methodOf ui.router.util.$templateFactory\r\n   *\r\n   * @description\r\n   * Creates a template from a string or a function returning a string.\r\n   *\r\n   * @param {string|object} template html template as a string or function that \r\n   * returns an html template as a string.\r\n   * @param {object} params Parameters to pass to the template function.\r\n   *\r\n   * @return {string|object} The template html as a string, or a promise for that \r\n   * string.\r\n   */\r\n  this.fromString = function (template, params) {\r\n    return isFunction(template) ? template(params) : template;\r\n  };\r\n\r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.util.$templateFactory#fromUrl\r\n   * @methodOf ui.router.util.$templateFactory\r\n   * \r\n   * @description\r\n   * Loads a template from the a URL via `$http` and `$templateCache`.\r\n   *\r\n   * @param {string|Function} url url of the template to load, or a function \r\n   * that returns a url.\r\n   * @param {Object} params Parameters to pass to the url function.\r\n   * @return {string|Promise.<string>} The template html as a string, or a promise \r\n   * for that string.\r\n   */\r\n  this.fromUrl = function (url, params) {\r\n    if (isFunction(url)) url = url(params);\r\n    if (url == null) return null;\r\n    else return $http\r\n        .get(url, { cache: $templateCache, headers: { Accept: 'text/html' }})\r\n        .then(function(response) { return response.data; });\r\n  };\r\n\r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.util.$templateFactory#fromProvider\r\n   * @methodOf ui.router.util.$templateFactory\r\n   *\r\n   * @description\r\n   * Creates a template by invoking an injectable provider function.\r\n   *\r\n   * @param {Function} provider Function to invoke via `$injector.invoke`\r\n   * @param {Object} params Parameters for the template.\r\n   * @param {Object} locals Locals to pass to `invoke`. Defaults to \r\n   * `{ params: params }`.\r\n   * @return {string|Promise.<string>} The template html as a string, or a promise \r\n   * for that string.\r\n   */\r\n  this.fromProvider = function (provider, params, locals) {\r\n    return $injector.invoke(provider, null, locals || { params: params });\r\n  };\r\n}\r\n\r\nangular.module('ui.router.util').service('$templateFactory', $TemplateFactory);\r\n\r\nvar $$UMFP; // reference to $UrlMatcherFactoryProvider\r\n\r\n/**\r\n * @ngdoc object\r\n * @name ui.router.util.type:UrlMatcher\r\n *\r\n * @description\r\n * Matches URLs against patterns and extracts named parameters from the path or the search\r\n * part of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list\r\n * of search parameters. Multiple search parameter names are separated by '&'. Search parameters\r\n * do not influence whether or not a URL is matched, but their values are passed through into\r\n * the matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.\r\n * \r\n * Path parameter placeholders can be specified using simple colon/catch-all syntax or curly brace\r\n * syntax, which optionally allows a regular expression for the parameter to be specified:\r\n *\r\n * * `':'` name - colon placeholder\r\n * * `'*'` name - catch-all placeholder\r\n * * `'{' name '}'` - curly placeholder\r\n * * `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the\r\n *   regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\r\n *\r\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\r\n * must be unique within the pattern (across both path and search parameters). For colon \r\n * placeholders or curly placeholders without an explicit regexp, a path parameter matches any\r\n * number of characters other than '/'. For catch-all placeholders the path parameter matches\r\n * any number of characters.\r\n * \r\n * Examples:\r\n * \r\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\r\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\r\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\r\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\r\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\r\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\r\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\r\n *   parameter consists of 1 to 8 hex digits.\r\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\r\n *   path into the parameter 'path'.\r\n * * `'/files/*path'` - ditto.\r\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\r\n *   in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start\r\n *\r\n * @param {string} pattern  The pattern to compile into a matcher.\r\n * @param {Object} config  A configuration object hash:\r\n * @param {Object=} parentMatcher Used to concatenate the pattern/config onto\r\n *   an existing UrlMatcher\r\n *\r\n * * `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\r\n * * `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\r\n *\r\n * @property {string} prefix  A static prefix of this pattern. The matcher guarantees that any\r\n *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns\r\n *   non-null) will start with this prefix.\r\n *\r\n * @property {string} source  The pattern that was passed into the constructor\r\n *\r\n * @property {string} sourcePath  The path portion of the source property\r\n *\r\n * @property {string} sourceSearch  The search portion of the source property\r\n *\r\n * @property {string} regex  The constructed regex that will be used to match against the url when \r\n *   it is time to determine which url will match.\r\n *\r\n * @returns {Object}  New `UrlMatcher` object\r\n */\r\nfunction UrlMatcher(pattern, config, parentMatcher) {\r\n  config = extend({ params: {} }, isObject(config) ? config : {});\r\n\r\n  // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\r\n  //   '*' name\r\n  //   ':' name\r\n  //   '{' name '}'\r\n  //   '{' name ':' regexp '}'\r\n  // The regular expression is somewhat complicated due to the need to allow curly braces\r\n  // inside the regular expression. The placeholder regexp breaks down as follows:\r\n  //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\r\n  //    \\{([\\w\\[\\]]+)(?:\\:( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\r\n  //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\r\n  //    [^{}\\\\]+                       - anything other than curly braces or backslash\r\n  //    \\\\.                            - a backslash escape\r\n  //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\r\n  var placeholder       = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\r\n      searchPlaceholder = /([:]?)([\\w\\[\\]-]+)|\\{([\\w\\[\\]-]+)(?:\\:((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\r\n      compiled = '^', last = 0, m,\r\n      segments = this.segments = [],\r\n      parentParams = parentMatcher ? parentMatcher.params : {},\r\n      params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet(),\r\n      paramNames = [];\r\n\r\n  function addParameter(id, type, config, location) {\r\n    paramNames.push(id);\r\n    if (parentParams[id]) return parentParams[id];\r\n    if (!/^\\w+(-+\\w+)*(?:\\[\\])?$/.test(id)) throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\r\n    if (params[id]) throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\r\n    params[id] = new $$UMFP.Param(id, type, config, location);\r\n    return params[id];\r\n  }\r\n\r\n  function quoteRegExp(string, pattern, squash) {\r\n    var surroundPattern = ['',''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\r\n    if (!pattern) return result;\r\n    switch(squash) {\r\n      case false: surroundPattern = ['(', ')'];   break;\r\n      case true:  surroundPattern = ['?(', ')?']; break;\r\n      default:    surroundPattern = ['(' + squash + \"|\", ')?'];  break;\r\n    }\r\n    return result + surroundPattern[0] + pattern + surroundPattern[1];\r\n  }\r\n\r\n  this.source = pattern;\r\n\r\n  // Split into static segments separated by path parameter placeholders.\r\n  // The number of segments is always 1 more than the number of parameters.\r\n  function matchDetails(m, isSearch) {\r\n    var id, regexp, segment, type, cfg, arrayMode;\r\n    id          = m[2] || m[3]; // IE[78] returns '' for unmatched groups instead of null\r\n    cfg         = config.params[id];\r\n    segment     = pattern.substring(last, m.index);\r\n    regexp      = isSearch ? m[4] : m[4] || (m[1] == '*' ? '.*' : null);\r\n    type        = $$UMFP.type(regexp || \"string\") || inherit($$UMFP.type(\"string\"), { pattern: new RegExp(regexp) });\r\n    return {\r\n      id: id, regexp: regexp, segment: segment, type: type, cfg: cfg\r\n    };\r\n  }\r\n\r\n  var p, param, segment;\r\n  while ((m = placeholder.exec(pattern))) {\r\n    p = matchDetails(m, false);\r\n    if (p.segment.indexOf('?') >= 0) break; // we're into the search part\r\n\r\n    param = addParameter(p.id, p.type, p.cfg, \"path\");\r\n    compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash);\r\n    segments.push(p.segment);\r\n    last = placeholder.lastIndex;\r\n  }\r\n  segment = pattern.substring(last);\r\n\r\n  // Find any search parameter names and remove them from the last segment\r\n  var i = segment.indexOf('?');\r\n\r\n  if (i >= 0) {\r\n    var search = this.sourceSearch = segment.substring(i);\r\n    segment = segment.substring(0, i);\r\n    this.sourcePath = pattern.substring(0, last + i);\r\n\r\n    if (search.length > 0) {\r\n      last = 0;\r\n      while ((m = searchPlaceholder.exec(search))) {\r\n        p = matchDetails(m, true);\r\n        param = addParameter(p.id, p.type, p.cfg, \"search\");\r\n        last = placeholder.lastIndex;\r\n        // check if ?&\r\n      }\r\n    }\r\n  } else {\r\n    this.sourcePath = pattern;\r\n    this.sourceSearch = '';\r\n  }\r\n\r\n  compiled += quoteRegExp(segment) + (config.strict === false ? '\\/?' : '') + '$';\r\n  segments.push(segment);\r\n\r\n  this.regexp = new RegExp(compiled, config.caseInsensitive ? 'i' : undefined);\r\n  this.prefix = segments[0];\r\n  this.$$paramNames = paramNames;\r\n}\r\n\r\n/**\r\n * @ngdoc function\r\n * @name ui.router.util.type:UrlMatcher#concat\r\n * @methodOf ui.router.util.type:UrlMatcher\r\n *\r\n * @description\r\n * Returns a new matcher for a pattern constructed by appending the path part and adding the\r\n * search parameters of the specified pattern to this pattern. The current pattern is not\r\n * modified. This can be understood as creating a pattern for URLs that are relative to (or\r\n * suffixes of) the current pattern.\r\n *\r\n * @example\r\n * The following two matchers are equivalent:\r\n * <pre>\r\n * new UrlMatcher('/user/{id}?q').concat('/details?date');\r\n * new UrlMatcher('/user/{id}/details?q&date');\r\n * </pre>\r\n *\r\n * @param {string} pattern  The pattern to append.\r\n * @param {Object} config  An object hash of the configuration for the matcher.\r\n * @returns {UrlMatcher}  A matcher for the concatenated pattern.\r\n */\r\nUrlMatcher.prototype.concat = function (pattern, config) {\r\n  // Because order of search parameters is irrelevant, we can add our own search\r\n  // parameters to the end of the new pattern. Parse the new pattern by itself\r\n  // and then join the bits together, but it's much easier to do this on a string level.\r\n  var defaultConfig = {\r\n    caseInsensitive: $$UMFP.caseInsensitive(),\r\n    strict: $$UMFP.strictMode(),\r\n    squash: $$UMFP.defaultSquashPolicy()\r\n  };\r\n  return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this);\r\n};\r\n\r\nUrlMatcher.prototype.toString = function () {\r\n  return this.source;\r\n};\r\n\r\n/**\r\n * @ngdoc function\r\n * @name ui.router.util.type:UrlMatcher#exec\r\n * @methodOf ui.router.util.type:UrlMatcher\r\n *\r\n * @description\r\n * Tests the specified path against this matcher, and returns an object containing the captured\r\n * parameter values, or null if the path does not match. The returned object contains the values\r\n * of any search parameters that are mentioned in the pattern, but their value may be null if\r\n * they are not present in `searchParams`. This means that search parameters are always treated\r\n * as optional.\r\n *\r\n * @example\r\n * <pre>\r\n * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\r\n *   x: '1', q: 'hello'\r\n * });\r\n * // returns { id: 'bob', q: 'hello', r: null }\r\n * </pre>\r\n *\r\n * @param {string} path  The URL path to match, e.g. `$location.path()`.\r\n * @param {Object} searchParams  URL search parameters, e.g. `$location.search()`.\r\n * @returns {Object}  The captured parameter values.\r\n */\r\nUrlMatcher.prototype.exec = function (path, searchParams) {\r\n  var m = this.regexp.exec(path);\r\n  if (!m) return null;\r\n  searchParams = searchParams || {};\r\n\r\n  var paramNames = this.parameters(), nTotal = paramNames.length,\r\n    nPath = this.segments.length - 1,\r\n    values = {}, i, j, cfg, paramName;\r\n\r\n  if (nPath !== m.length - 1) throw new Error(\"Unbalanced capture group in route '\" + this.source + \"'\");\r\n\r\n  function decodePathArray(string) {\r\n    function reverseString(str) { return str.split(\"\").reverse().join(\"\"); }\r\n    function unquoteDashes(str) { return str.replace(/\\\\-/, \"-\"); }\r\n\r\n    var split = reverseString(string).split(/-(?!\\\\)/);\r\n    var allReversed = map(split, reverseString);\r\n    return map(allReversed, unquoteDashes).reverse();\r\n  }\r\n\r\n  for (i = 0; i < nPath; i++) {\r\n    paramName = paramNames[i];\r\n    var param = this.params[paramName];\r\n    var paramVal = m[i+1];\r\n    // if the param value matches a pre-replace pair, replace the value before decoding.\r\n    for (j = 0; j < param.replace; j++) {\r\n      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\r\n    }\r\n    if (paramVal && param.array === true) paramVal = decodePathArray(paramVal);\r\n    values[paramName] = param.value(paramVal);\r\n  }\r\n  for (/**/; i < nTotal; i++) {\r\n    paramName = paramNames[i];\r\n    values[paramName] = this.params[paramName].value(searchParams[paramName]);\r\n  }\r\n\r\n  return values;\r\n};\r\n\r\n/**\r\n * @ngdoc function\r\n * @name ui.router.util.type:UrlMatcher#parameters\r\n * @methodOf ui.router.util.type:UrlMatcher\r\n *\r\n * @description\r\n * Returns the names of all path and search parameters of this pattern in an unspecified order.\r\n * \r\n * @returns {Array.<string>}  An array of parameter names. Must be treated as read-only. If the\r\n *    pattern has no parameters, an empty array is returned.\r\n */\r\nUrlMatcher.prototype.parameters = function (param) {\r\n  if (!isDefined(param)) return this.$$paramNames;\r\n  return this.params[param] || null;\r\n};\r\n\r\n/**\r\n * @ngdoc function\r\n * @name ui.router.util.type:UrlMatcher#validate\r\n * @methodOf ui.router.util.type:UrlMatcher\r\n *\r\n * @description\r\n * Checks an object hash of parameters to validate their correctness according to the parameter\r\n * types of this `UrlMatcher`.\r\n *\r\n * @param {Object} params The object hash of parameters to validate.\r\n * @returns {boolean} Returns `true` if `params` validates, otherwise `false`.\r\n */\r\nUrlMatcher.prototype.validates = function (params) {\r\n  return this.params.$$validates(params);\r\n};\r\n\r\n/**\r\n * @ngdoc function\r\n * @name ui.router.util.type:UrlMatcher#format\r\n * @methodOf ui.router.util.type:UrlMatcher\r\n *\r\n * @description\r\n * Creates a URL that matches this pattern by substituting the specified values\r\n * for the path and search parameters. Null values for path parameters are\r\n * treated as empty strings.\r\n *\r\n * @example\r\n * <pre>\r\n * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\r\n * // returns '/user/bob?q=yes'\r\n * </pre>\r\n *\r\n * @param {Object} values  the values to substitute for the parameters in this pattern.\r\n * @returns {string}  the formatted URL (path and optionally search part).\r\n */\r\nUrlMatcher.prototype.format = function (values) {\r\n  values = values || {};\r\n  var segments = this.segments, params = this.parameters(), paramset = this.params;\r\n  if (!this.validates(values)) return null;\r\n\r\n  var i, search = false, nPath = segments.length - 1, nTotal = params.length, result = segments[0];\r\n\r\n  function encodeDashes(str) { // Replace dashes with encoded \"\\-\"\r\n    return encodeURIComponent(str).replace(/-/g, function(c) { return '%5C%' + c.charCodeAt(0).toString(16).toUpperCase(); });\r\n  }\r\n\r\n  for (i = 0; i < nTotal; i++) {\r\n    var isPathParam = i < nPath;\r\n    var name = params[i], param = paramset[name], value = param.value(values[name]);\r\n    var isDefaultValue = param.isOptional && param.type.equals(param.value(), value);\r\n    var squash = isDefaultValue ? param.squash : false;\r\n    var encoded = param.type.encode(value);\r\n\r\n    if (isPathParam) {\r\n      var nextSegment = segments[i + 1];\r\n      if (squash === false) {\r\n        if (encoded != null) {\r\n          if (isArray(encoded)) {\r\n            result += map(encoded, encodeDashes).join(\"-\");\r\n          } else {\r\n            result += encodeURIComponent(encoded);\r\n          }\r\n        }\r\n        result += nextSegment;\r\n      } else if (squash === true) {\r\n        var capture = result.match(/\\/$/) ? /\\/?(.*)/ : /(.*)/;\r\n        result += nextSegment.match(capture)[1];\r\n      } else if (isString(squash)) {\r\n        result += squash + nextSegment;\r\n      }\r\n    } else {\r\n      if (encoded == null || (isDefaultValue && squash !== false)) continue;\r\n      if (!isArray(encoded)) encoded = [ encoded ];\r\n      encoded = map(encoded, encodeURIComponent).join('&' + name + '=');\r\n      result += (search ? '&' : '?') + (name + '=' + encoded);\r\n      search = true;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * @ngdoc object\r\n * @name ui.router.util.type:Type\r\n *\r\n * @description\r\n * Implements an interface to define custom parameter types that can be decoded from and encoded to\r\n * string parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}\r\n * objects when matching or formatting URLs, or comparing or validating parameter values.\r\n *\r\n * See {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more\r\n * information on registering custom types.\r\n *\r\n * @param {Object} config  A configuration object which contains the custom type definition.  The object's\r\n *        properties will override the default methods and/or pattern in `Type`'s public interface.\r\n * @example\r\n * <pre>\r\n * {\r\n *   decode: function(val) { return parseInt(val, 10); },\r\n *   encode: function(val) { return val && val.toString(); },\r\n *   equals: function(a, b) { return this.is(a) && a === b; },\r\n *   is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },\r\n *   pattern: /\\d+/\r\n * }\r\n * </pre>\r\n *\r\n * @property {RegExp} pattern The regular expression pattern used to match values of this type when\r\n *           coming from a substring of a URL.\r\n *\r\n * @returns {Object}  Returns a new `Type` object.\r\n */\r\nfunction Type(config) {\r\n  extend(this, config);\r\n}\r\n\r\n/**\r\n * @ngdoc function\r\n * @name ui.router.util.type:Type#is\r\n * @methodOf ui.router.util.type:Type\r\n *\r\n * @description\r\n * Detects whether a value is of a particular type. Accepts a native (decoded) value\r\n * and determines whether it matches the current `Type` object.\r\n *\r\n * @param {*} val  The value to check.\r\n * @param {string} key  Optional. If the type check is happening in the context of a specific\r\n *        {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the\r\n *        parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.\r\n * @returns {Boolean}  Returns `true` if the value matches the type, otherwise `false`.\r\n */\r\nType.prototype.is = function(val, key) {\r\n  return true;\r\n};\r\n\r\n/**\r\n * @ngdoc function\r\n * @name ui.router.util.type:Type#encode\r\n * @methodOf ui.router.util.type:Type\r\n *\r\n * @description\r\n * Encodes a custom/native type value to a string that can be embedded in a URL. Note that the\r\n * return value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it\r\n * only needs to be a representation of `val` that has been coerced to a string.\r\n *\r\n * @param {*} val  The value to encode.\r\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\r\n *        meta-programming of `Type` objects.\r\n * @returns {string}  Returns a string representation of `val` that can be encoded in a URL.\r\n */\r\nType.prototype.encode = function(val, key) {\r\n  return val;\r\n};\r\n\r\n/**\r\n * @ngdoc function\r\n * @name ui.router.util.type:Type#decode\r\n * @methodOf ui.router.util.type:Type\r\n *\r\n * @description\r\n * Converts a parameter value (from URL string or transition param) to a custom/native value.\r\n *\r\n * @param {string} val  The URL parameter value to decode.\r\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\r\n *        meta-programming of `Type` objects.\r\n * @returns {*}  Returns a custom representation of the URL parameter value.\r\n */\r\nType.prototype.decode = function(val, key) {\r\n  return val;\r\n};\r\n\r\n/**\r\n * @ngdoc function\r\n * @name ui.router.util.type:Type#equals\r\n * @methodOf ui.router.util.type:Type\r\n *\r\n * @description\r\n * Determines whether two decoded values are equivalent.\r\n *\r\n * @param {*} a  A value to compare against.\r\n * @param {*} b  A value to compare against.\r\n * @returns {Boolean}  Returns `true` if the values are equivalent/equal, otherwise `false`.\r\n */\r\nType.prototype.equals = function(a, b) {\r\n  return a == b;\r\n};\r\n\r\nType.prototype.$subPattern = function() {\r\n  var sub = this.pattern.toString();\r\n  return sub.substr(1, sub.length - 2);\r\n};\r\n\r\nType.prototype.pattern = /.*/;\r\n\r\nType.prototype.toString = function() { return \"{Type:\" + this.name + \"}\"; };\r\n\r\n/*\r\n * Wraps an existing custom Type as an array of Type, depending on 'mode'.\r\n * e.g.:\r\n * - urlmatcher pattern \"/path?{queryParam[]:int}\"\r\n * - url: \"/path?queryParam=1&queryParam=2\r\n * - $stateParams.queryParam will be [1, 2]\r\n * if `mode` is \"auto\", then\r\n * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\r\n * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\r\n */\r\nType.prototype.$asArray = function(mode, isSearch) {\r\n  if (!mode) return this;\r\n  if (mode === \"auto\" && !isSearch) throw new Error(\"'auto' array mode is for query parameters only\");\r\n  return new ArrayType(this, mode);\r\n\r\n  function ArrayType(type, mode) {\r\n    function bindTo(type, callbackName) {\r\n      return function() {\r\n        return type[callbackName].apply(type, arguments);\r\n      };\r\n    }\r\n\r\n    // Wrap non-array value as array\r\n    function arrayWrap(val) { return isArray(val) ? val : (isDefined(val) ? [ val ] : []); }\r\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\r\n    function arrayUnwrap(val) {\r\n      switch(val.length) {\r\n        case 0: return undefined;\r\n        case 1: return mode === \"auto\" ? val[0] : val;\r\n        default: return val;\r\n      }\r\n    }\r\n    function falsey(val) { return !val; }\r\n\r\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\r\n    function arrayHandler(callback, allTruthyMode) {\r\n      return function handleArray(val) {\r\n        val = arrayWrap(val);\r\n        var result = map(val, callback);\r\n        if (allTruthyMode === true)\r\n          return filter(result, falsey).length === 0;\r\n        return arrayUnwrap(result);\r\n      };\r\n    }\r\n\r\n    // Wraps type (.equals) functions to operate on each value of an array\r\n    function arrayEqualsHandler(callback) {\r\n      return function handleArray(val1, val2) {\r\n        var left = arrayWrap(val1), right = arrayWrap(val2);\r\n        if (left.length !== right.length) return false;\r\n        for (var i = 0; i < left.length; i++) {\r\n          if (!callback(left[i], right[i])) return false;\r\n        }\r\n        return true;\r\n      };\r\n    }\r\n\r\n    this.encode = arrayHandler(bindTo(type, 'encode'));\r\n    this.decode = arrayHandler(bindTo(type, 'decode'));\r\n    this.is     = arrayHandler(bindTo(type, 'is'), true);\r\n    this.equals = arrayEqualsHandler(bindTo(type, 'equals'));\r\n    this.pattern = type.pattern;\r\n    this.$arrayMode = mode;\r\n  }\r\n};\r\n\r\n\r\n\r\n/**\r\n * @ngdoc object\r\n * @name ui.router.util.$urlMatcherFactory\r\n *\r\n * @description\r\n * Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory\r\n * is also available to providers under the name `$urlMatcherFactoryProvider`.\r\n */\r\nfunction $UrlMatcherFactory() {\r\n  $$UMFP = this;\r\n\r\n  var isCaseInsensitive = false, isStrictMode = true, defaultSquashPolicy = false;\r\n\r\n  function valToString(val) { return val != null ? val.toString().replace(/\\//g, \"%2F\") : val; }\r\n  function valFromString(val) { return val != null ? val.toString().replace(/%2F/g, \"/\") : val; }\r\n//  TODO: in 1.0, make string .is() return false if value is undefined by default.\r\n//  function regexpMatches(val) { /*jshint validthis:true */ return isDefined(val) && this.pattern.test(val); }\r\n  function regexpMatches(val) { /*jshint validthis:true */ return this.pattern.test(val); }\r\n\r\n  var $types = {}, enqueue = true, typeQueue = [], injector, defaultTypes = {\r\n    string: {\r\n      encode: valToString,\r\n      decode: valFromString,\r\n      is: regexpMatches,\r\n      pattern: /[^/]*/\r\n    },\r\n    int: {\r\n      encode: valToString,\r\n      decode: function(val) { return parseInt(val, 10); },\r\n      is: function(val) { return isDefined(val) && this.decode(val.toString()) === val; },\r\n      pattern: /\\d+/\r\n    },\r\n    bool: {\r\n      encode: function(val) { return val ? 1 : 0; },\r\n      decode: function(val) { return parseInt(val, 10) !== 0; },\r\n      is: function(val) { return val === true || val === false; },\r\n      pattern: /0|1/\r\n    },\r\n    date: {\r\n      encode: function (val) {\r\n        if (!this.is(val))\r\n          return undefined;\r\n        return [ val.getFullYear(),\r\n          ('0' + (val.getMonth() + 1)).slice(-2),\r\n          ('0' + val.getDate()).slice(-2)\r\n        ].join(\"-\");\r\n      },\r\n      decode: function (val) {\r\n        if (this.is(val)) return val;\r\n        var match = this.capture.exec(val);\r\n        return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\r\n      },\r\n      is: function(val) { return val instanceof Date && !isNaN(val.valueOf()); },\r\n      equals: function (a, b) { return this.is(a) && this.is(b) && a.toISOString() === b.toISOString(); },\r\n      pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\r\n      capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\r\n    },\r\n    json: {\r\n      encode: angular.toJson,\r\n      decode: angular.fromJson,\r\n      is: angular.isObject,\r\n      equals: angular.equals,\r\n      pattern: /[^/]*/\r\n    },\r\n    any: { // does not encode/decode\r\n      encode: angular.identity,\r\n      decode: angular.identity,\r\n      is: angular.identity,\r\n      equals: angular.equals,\r\n      pattern: /.*/\r\n    }\r\n  };\r\n\r\n  function getDefaultConfig() {\r\n    return {\r\n      strict: isStrictMode,\r\n      caseInsensitive: isCaseInsensitive\r\n    };\r\n  }\r\n\r\n  function isInjectable(value) {\r\n    return (isFunction(value) || (isArray(value) && isFunction(value[value.length - 1])));\r\n  }\r\n\r\n  /**\r\n   * [Internal] Get the default value of a parameter, which may be an injectable function.\r\n   */\r\n  $UrlMatcherFactory.$$getDefaultValue = function(config) {\r\n    if (!isInjectable(config.value)) return config.value;\r\n    if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\r\n    return injector.invoke(config.value);\r\n  };\r\n\r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.util.$urlMatcherFactory#caseInsensitive\r\n   * @methodOf ui.router.util.$urlMatcherFactory\r\n   *\r\n   * @description\r\n   * Defines whether URL matching should be case sensitive (the default behavior), or not.\r\n   *\r\n   * @param {boolean} value `false` to match URL in a case sensitive manner; otherwise `true`;\r\n   * @returns {boolean} the current value of caseInsensitive\r\n   */\r\n  this.caseInsensitive = function(value) {\r\n    if (isDefined(value))\r\n      isCaseInsensitive = value;\r\n    return isCaseInsensitive;\r\n  };\r\n\r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.util.$urlMatcherFactory#strictMode\r\n   * @methodOf ui.router.util.$urlMatcherFactory\r\n   *\r\n   * @description\r\n   * Defines whether URLs should match trailing slashes, or not (the default behavior).\r\n   *\r\n   * @param {boolean=} value `false` to match trailing slashes in URLs, otherwise `true`.\r\n   * @returns {boolean} the current value of strictMode\r\n   */\r\n  this.strictMode = function(value) {\r\n    if (isDefined(value))\r\n      isStrictMode = value;\r\n    return isStrictMode;\r\n  };\r\n\r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.util.$urlMatcherFactory#defaultSquashPolicy\r\n   * @methodOf ui.router.util.$urlMatcherFactory\r\n   *\r\n   * @description\r\n   * Sets the default behavior when generating or matching URLs with default parameter values.\r\n   *\r\n   * @param {string} value A string that defines the default parameter URL squashing behavior.\r\n   *    `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\r\n   *    `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\r\n   *             parameter is surrounded by slashes, squash (remove) one slash from the URL\r\n   *    any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\r\n   *             the parameter value from the URL and replace it with this string.\r\n   */\r\n  this.defaultSquashPolicy = function(value) {\r\n    if (!isDefined(value)) return defaultSquashPolicy;\r\n    if (value !== true && value !== false && !isString(value))\r\n      throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\r\n    defaultSquashPolicy = value;\r\n    return value;\r\n  };\r\n\r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.util.$urlMatcherFactory#compile\r\n   * @methodOf ui.router.util.$urlMatcherFactory\r\n   *\r\n   * @description\r\n   * Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.\r\n   *\r\n   * @param {string} pattern  The URL pattern.\r\n   * @param {Object} config  The config object hash.\r\n   * @returns {UrlMatcher}  The UrlMatcher.\r\n   */\r\n  this.compile = function (pattern, config) {\r\n    return new UrlMatcher(pattern, extend(getDefaultConfig(), config));\r\n  };\r\n\r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.util.$urlMatcherFactory#isMatcher\r\n   * @methodOf ui.router.util.$urlMatcherFactory\r\n   *\r\n   * @description\r\n   * Returns true if the specified object is a `UrlMatcher`, or false otherwise.\r\n   *\r\n   * @param {Object} object  The object to perform the type check against.\r\n   * @returns {Boolean}  Returns `true` if the object matches the `UrlMatcher` interface, by\r\n   *          implementing all the same methods.\r\n   */\r\n  this.isMatcher = function (o) {\r\n    if (!isObject(o)) return false;\r\n    var result = true;\r\n\r\n    forEach(UrlMatcher.prototype, function(val, name) {\r\n      if (isFunction(val)) {\r\n        result = result && (isDefined(o[name]) && isFunction(o[name]));\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.util.$urlMatcherFactory#type\r\n   * @methodOf ui.router.util.$urlMatcherFactory\r\n   *\r\n   * @description\r\n   * Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to\r\n   * generate URLs with typed parameters.\r\n   *\r\n   * @param {string} name  The type name.\r\n   * @param {Object|Function} definition   The type definition. See\r\n   *        {@link ui.router.util.type:Type `Type`} for information on the values accepted.\r\n   * @param {Object|Function} definitionFn (optional) A function that is injected before the app\r\n   *        runtime starts.  The result of this function is merged into the existing `definition`.\r\n   *        See {@link ui.router.util.type:Type `Type`} for information on the values accepted.\r\n   *\r\n   * @returns {Object}  Returns `$urlMatcherFactoryProvider`.\r\n   *\r\n   * @example\r\n   * This is a simple example of a custom type that encodes and decodes items from an\r\n   * array, using the array index as the URL-encoded value:\r\n   *\r\n   * <pre>\r\n   * var list = ['John', 'Paul', 'George', 'Ringo'];\r\n   *\r\n   * $urlMatcherFactoryProvider.type('listItem', {\r\n   *   encode: function(item) {\r\n   *     // Represent the list item in the URL using its corresponding index\r\n   *     return list.indexOf(item);\r\n   *   },\r\n   *   decode: function(item) {\r\n   *     // Look up the list item by index\r\n   *     return list[parseInt(item, 10)];\r\n   *   },\r\n   *   is: function(item) {\r\n   *     // Ensure the item is valid by checking to see that it appears\r\n   *     // in the list\r\n   *     return list.indexOf(item) > -1;\r\n   *   }\r\n   * });\r\n   *\r\n   * $stateProvider.state('list', {\r\n   *   url: \"/list/{item:listItem}\",\r\n   *   controller: function($scope, $stateParams) {\r\n   *     console.log($stateParams.item);\r\n   *   }\r\n   * });\r\n   *\r\n   * // ...\r\n   *\r\n   * // Changes URL to '/list/3', logs \"Ringo\" to the console\r\n   * $state.go('list', { item: \"Ringo\" });\r\n   * </pre>\r\n   *\r\n   * This is a more complex example of a type that relies on dependency injection to\r\n   * interact with services, and uses the parameter name from the URL to infer how to\r\n   * handle encoding and decoding parameter values:\r\n   *\r\n   * <pre>\r\n   * // Defines a custom type that gets a value from a service,\r\n   * // where each service gets different types of values from\r\n   * // a backend API:\r\n   * $urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {\r\n   *\r\n   *   // Matches up services to URL parameter names\r\n   *   var services = {\r\n   *     user: Users,\r\n   *     post: Posts\r\n   *   };\r\n   *\r\n   *   return {\r\n   *     encode: function(object) {\r\n   *       // Represent the object in the URL using its unique ID\r\n   *       return object.id;\r\n   *     },\r\n   *     decode: function(value, key) {\r\n   *       // Look up the object by ID, using the parameter\r\n   *       // name (key) to call the correct service\r\n   *       return services[key].findById(value);\r\n   *     },\r\n   *     is: function(object, key) {\r\n   *       // Check that object is a valid dbObject\r\n   *       return angular.isObject(object) && object.id && services[key];\r\n   *     }\r\n   *     equals: function(a, b) {\r\n   *       // Check the equality of decoded objects by comparing\r\n   *       // their unique IDs\r\n   *       return a.id === b.id;\r\n   *     }\r\n   *   };\r\n   * });\r\n   *\r\n   * // In a config() block, you can then attach URLs with\r\n   * // type-annotated parameters:\r\n   * $stateProvider.state('users', {\r\n   *   url: \"/users\",\r\n   *   // ...\r\n   * }).state('users.item', {\r\n   *   url: \"/{user:dbObject}\",\r\n   *   controller: function($scope, $stateParams) {\r\n   *     // $stateParams.user will now be an object returned from\r\n   *     // the Users service\r\n   *   },\r\n   *   // ...\r\n   * });\r\n   * </pre>\r\n   */\r\n  this.type = function (name, definition, definitionFn) {\r\n    if (!isDefined(definition)) return $types[name];\r\n    if ($types.hasOwnProperty(name)) throw new Error(\"A type named '\" + name + \"' has already been defined.\");\r\n\r\n    $types[name] = new Type(extend({ name: name }, definition));\r\n    if (definitionFn) {\r\n      typeQueue.push({ name: name, def: definitionFn });\r\n      if (!enqueue) flushTypeQueue();\r\n    }\r\n    return this;\r\n  };\r\n\r\n  // `flushTypeQueue()` waits until `$urlMatcherFactory` is injected before invoking the queued `definitionFn`s\r\n  function flushTypeQueue() {\r\n    while(typeQueue.length) {\r\n      var type = typeQueue.shift();\r\n      if (type.pattern) throw new Error(\"You cannot override a type's .pattern at runtime.\");\r\n      angular.extend($types[type.name], injector.invoke(type.def));\r\n    }\r\n  }\r\n\r\n  // Register default types. Store them in the prototype of $types.\r\n  forEach(defaultTypes, function(type, name) { $types[name] = new Type(extend({name: name}, type)); });\r\n  $types = inherit($types, {});\r\n\r\n  /* No need to document $get, since it returns this */\r\n  this.$get = ['$injector', function ($injector) {\r\n    injector = $injector;\r\n    enqueue = false;\r\n    flushTypeQueue();\r\n\r\n    forEach(defaultTypes, function(type, name) {\r\n      if (!$types[name]) $types[name] = new Type(type);\r\n    });\r\n    return this;\r\n  }];\r\n\r\n  this.Param = function Param(id, type, config, location) {\r\n    var self = this;\r\n    config = unwrapShorthand(config);\r\n    type = getType(config, type, location);\r\n    var arrayMode = getArrayMode();\r\n    type = arrayMode ? type.$asArray(arrayMode, location === \"search\") : type;\r\n    if (type.name === \"string\" && !arrayMode && location === \"path\" && config.value === undefined)\r\n      config.value = \"\"; // for 0.2.x; in 0.3.0+ do not automatically default to \"\"\r\n    var isOptional = config.value !== undefined;\r\n    var squash = getSquashPolicy(config, isOptional);\r\n    var replace = getReplace(config, arrayMode, isOptional, squash);\r\n\r\n    function unwrapShorthand(config) {\r\n      var keys = isObject(config) ? objectKeys(config) : [];\r\n      var isShorthand = indexOf(keys, \"value\") === -1 && indexOf(keys, \"type\") === -1 &&\r\n                        indexOf(keys, \"squash\") === -1 && indexOf(keys, \"array\") === -1;\r\n      if (isShorthand) config = { value: config };\r\n      config.$$fn = isInjectable(config.value) ? config.value : function () { return config.value; };\r\n      return config;\r\n    }\r\n\r\n    function getType(config, urlType, location) {\r\n      if (config.type && urlType) throw new Error(\"Param '\"+id+\"' has two type configurations.\");\r\n      if (urlType) return urlType;\r\n      if (!config.type) return (location === \"config\" ? $types.any : $types.string);\r\n      return config.type instanceof Type ? config.type : new Type(config.type);\r\n    }\r\n\r\n    // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\r\n    function getArrayMode() {\r\n      var arrayDefaults = { array: (location === \"search\" ? \"auto\" : false) };\r\n      var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\r\n      return extend(arrayDefaults, arrayParamNomenclature, config).array;\r\n    }\r\n\r\n    /**\r\n     * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\r\n     */\r\n    function getSquashPolicy(config, isOptional) {\r\n      var squash = config.squash;\r\n      if (!isOptional || squash === false) return false;\r\n      if (!isDefined(squash) || squash == null) return defaultSquashPolicy;\r\n      if (squash === true || isString(squash)) return squash;\r\n      throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\r\n    }\r\n\r\n    function getReplace(config, arrayMode, isOptional, squash) {\r\n      var replace, configuredKeys, defaultPolicy = [\r\n        { from: \"\",   to: (isOptional || arrayMode ? undefined : \"\") },\r\n        { from: null, to: (isOptional || arrayMode ? undefined : \"\") }\r\n      ];\r\n      replace = isArray(config.replace) ? config.replace : [];\r\n      if (isString(squash))\r\n        replace.push({ from: squash, to: undefined });\r\n      configuredKeys = map(replace, function(item) { return item.from; } );\r\n      return filter(defaultPolicy, function(item) { return indexOf(configuredKeys, item.from) === -1; }).concat(replace);\r\n    }\r\n\r\n    /**\r\n     * [Internal] Get the default value of a parameter, which may be an injectable function.\r\n     */\r\n    function $$getDefaultValue() {\r\n      if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\r\n      return injector.invoke(config.$$fn);\r\n    }\r\n\r\n    /**\r\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\r\n     * default value, which may be the result of an injectable function.\r\n     */\r\n    function $value(value) {\r\n      function hasReplaceVal(val) { return function(obj) { return obj.from === val; }; }\r\n      function $replace(value) {\r\n        var replacement = map(filter(self.replace, hasReplaceVal(value)), function(obj) { return obj.to; });\r\n        return replacement.length ? replacement[0] : value;\r\n      }\r\n      value = $replace(value);\r\n      return isDefined(value) ? self.type.decode(value) : $$getDefaultValue();\r\n    }\r\n\r\n    function toString() { return \"{Param:\" + id + \" \" + type + \" squash: '\" + squash + \"' optional: \" + isOptional + \"}\"; }\r\n\r\n    extend(this, {\r\n      id: id,\r\n      type: type,\r\n      location: location,\r\n      array: arrayMode,\r\n      squash: squash,\r\n      replace: replace,\r\n      isOptional: isOptional,\r\n      value: $value,\r\n      dynamic: undefined,\r\n      config: config,\r\n      toString: toString\r\n    });\r\n  };\r\n\r\n  function ParamSet(params) {\r\n    extend(this, params || {});\r\n  }\r\n\r\n  ParamSet.prototype = {\r\n    $$new: function() {\r\n      return inherit(this, extend(new ParamSet(), { $$parent: this}));\r\n    },\r\n    $$keys: function () {\r\n      var keys = [], chain = [], parent = this,\r\n        ignore = objectKeys(ParamSet.prototype);\r\n      while (parent) { chain.push(parent); parent = parent.$$parent; }\r\n      chain.reverse();\r\n      forEach(chain, function(paramset) {\r\n        forEach(objectKeys(paramset), function(key) {\r\n            if (indexOf(keys, key) === -1 && indexOf(ignore, key) === -1) keys.push(key);\r\n        });\r\n      });\r\n      return keys;\r\n    },\r\n    $$values: function(paramValues) {\r\n      var values = {}, self = this;\r\n      forEach(self.$$keys(), function(key) {\r\n        values[key] = self[key].value(paramValues && paramValues[key]);\r\n      });\r\n      return values;\r\n    },\r\n    $$equals: function(paramValues1, paramValues2) {\r\n      var equal = true, self = this;\r\n      forEach(self.$$keys(), function(key) {\r\n        var left = paramValues1 && paramValues1[key], right = paramValues2 && paramValues2[key];\r\n        if (!self[key].type.equals(left, right)) equal = false;\r\n      });\r\n      return equal;\r\n    },\r\n    $$validates: function $$validate(paramValues) {\r\n      var result = true, isOptional, val, param, self = this;\r\n\r\n      forEach(this.$$keys(), function(key) {\r\n        param = self[key];\r\n        val = paramValues[key];\r\n        isOptional = !val && param.isOptional;\r\n        result = result && (isOptional || !!param.type.is(val));\r\n      });\r\n      return result;\r\n    },\r\n    $$parent: undefined\r\n  };\r\n\r\n  this.ParamSet = ParamSet;\r\n}\r\n\r\n// Register as a provider so it's available to other providers\r\nangular.module('ui.router.util').provider('$urlMatcherFactory', $UrlMatcherFactory);\r\nangular.module('ui.router.util').run(['$urlMatcherFactory', function($urlMatcherFactory) { }]);\r\n\r\n/**\r\n * @ngdoc object\r\n * @name ui.router.router.$urlRouterProvider\r\n *\r\n * @requires ui.router.util.$urlMatcherFactoryProvider\r\n * @requires $locationProvider\r\n *\r\n * @description\r\n * `$urlRouterProvider` has the responsibility of watching `$location`. \r\n * When `$location` changes it runs through a list of rules one by one until a \r\n * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify \r\n * a url in a state configuration. All urls are compiled into a UrlMatcher object.\r\n *\r\n * There are several methods on `$urlRouterProvider` that make it useful to use directly\r\n * in your module config.\r\n */\r\n$UrlRouterProvider.$inject = ['$locationProvider', '$urlMatcherFactoryProvider'];\r\nfunction $UrlRouterProvider(   $locationProvider,   $urlMatcherFactory) {\r\n  var rules = [], otherwise = null, interceptDeferred = false, listener;\r\n\r\n  // Returns a string that is a prefix of all strings matching the RegExp\r\n  function regExpPrefix(re) {\r\n    var prefix = /^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)/.exec(re.source);\r\n    return (prefix != null) ? prefix[1].replace(/\\\\(.)/g, \"$1\") : '';\r\n  }\r\n\r\n  // Interpolates matched values into a String.replace()-style pattern\r\n  function interpolate(pattern, match) {\r\n    return pattern.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\r\n      return match[what === '$' ? 0 : Number(what)];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.router.$urlRouterProvider#rule\r\n   * @methodOf ui.router.router.$urlRouterProvider\r\n   *\r\n   * @description\r\n   * Defines rules that are used by `$urlRouterProvider` to find matches for\r\n   * specific URLs.\r\n   *\r\n   * @example\r\n   * <pre>\r\n   * var app = angular.module('app', ['ui.router.router']);\r\n   *\r\n   * app.config(function ($urlRouterProvider) {\r\n   *   // Here's an example of how you might allow case insensitive urls\r\n   *   $urlRouterProvider.rule(function ($injector, $location) {\r\n   *     var path = $location.path(),\r\n   *         normalized = path.toLowerCase();\r\n   *\r\n   *     if (path !== normalized) {\r\n   *       return normalized;\r\n   *     }\r\n   *   });\r\n   * });\r\n   * </pre>\r\n   *\r\n   * @param {object} rule Handler function that takes `$injector` and `$location`\r\n   * services as arguments. You can use them to return a valid path as a string.\r\n   *\r\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\r\n   */\r\n  this.rule = function (rule) {\r\n    if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\r\n    rules.push(rule);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name ui.router.router.$urlRouterProvider#otherwise\r\n   * @methodOf ui.router.router.$urlRouterProvider\r\n   *\r\n   * @description\r\n   * Defines a path that is used when an invalid route is requested.\r\n   *\r\n   * @example\r\n   * <pre>\r\n   * var app = angular.module('app', ['ui.router.router']);\r\n   *\r\n   * app.config(function ($urlRouterProvider) {\r\n   *   // if the path doesn't match any of the urls you configured\r\n   *   // otherwise will take care of routing the user to the\r\n   *   // specified url\r\n   *   $urlRouterProvider.otherwise('/index');\r\n   *\r\n   *   // Example of using function rule as param\r\n   *   $urlRouterProvider.otherwise(function ($injector, $location) {\r\n   *     return '/a/valid/url';\r\n   *   });\r\n   * });\r\n   * </pre>\r\n   *\r\n   * @param {string|object} rule The url path you want to redirect to or a function \r\n   * rule that returns the url path. The function version is passed two params: \r\n   * `$injector` and `$location` services, and must return a url string.\r\n   *\r\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\r\n   */\r\n  this.otherwise = function (rule) {\r\n    if (isString(rule)) {\r\n      var redirect = rule;\r\n      rule = function () { return redirect; };\r\n    }\r\n    else if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\r\n    otherwise = rule;\r\n    return this;\r\n  };\r\n\r\n\r\n  function handleIfMatch($injector, handler, match) {\r\n    if (!match) return false;\r\n    var result = $injector.invoke(handler, handler, { $match: match });\r\n    return isDefined(result) ? result : true;\r\n  }\r\n\r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.router.$urlRouterProvider#when\r\n   * @methodOf ui.router.router.$urlRouterProvider\r\n   *\r\n   * @description\r\n   * Registers a handler for a given url matching. if handle is a string, it is\r\n   * treated as a redirect, and is interpolated according to the syntax of match\r\n   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\r\n   *\r\n   * If the handler is a function, it is injectable. It gets invoked if `$location`\r\n   * matches. You have the option of inject the match object as `$match`.\r\n   *\r\n   * The handler can return\r\n   *\r\n   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\r\n   *   will continue trying to find another one that matches.\r\n   * - **string** which is treated as a redirect and passed to `$location.url()`\r\n   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\r\n   *\r\n   * @example\r\n   * <pre>\r\n   * var app = angular.module('app', ['ui.router.router']);\r\n   *\r\n   * app.config(function ($urlRouterProvider) {\r\n   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\r\n   *     if ($state.$current.navigable !== state ||\r\n   *         !equalForKeys($match, $stateParams) {\r\n   *      $state.transitionTo(state, $match, false);\r\n   *     }\r\n   *   });\r\n   * });\r\n   * </pre>\r\n   *\r\n   * @param {string|object} what The incoming path that you want to redirect.\r\n   * @param {string|object} handler The path you want to redirect your user to.\r\n   */\r\n  this.when = function (what, handler) {\r\n    var redirect, handlerIsString = isString(handler);\r\n    if (isString(what)) what = $urlMatcherFactory.compile(what);\r\n\r\n    if (!handlerIsString && !isFunction(handler) && !isArray(handler))\r\n      throw new Error(\"invalid 'handler' in when()\");\r\n\r\n    var strategies = {\r\n      matcher: function (what, handler) {\r\n        if (handlerIsString) {\r\n          redirect = $urlMatcherFactory.compile(handler);\r\n          handler = ['$match', function ($match) { return redirect.format($match); }];\r\n        }\r\n        return extend(function ($injector, $location) {\r\n          return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()));\r\n        }, {\r\n          prefix: isString(what.prefix) ? what.prefix : ''\r\n        });\r\n      },\r\n      regex: function (what, handler) {\r\n        if (what.global || what.sticky) throw new Error(\"when() RegExp must not be global or sticky\");\r\n\r\n        if (handlerIsString) {\r\n          redirect = handler;\r\n          handler = ['$match', function ($match) { return interpolate(redirect, $match); }];\r\n        }\r\n        return extend(function ($injector, $location) {\r\n          return handleIfMatch($injector, handler, what.exec($location.path()));\r\n        }, {\r\n          prefix: regExpPrefix(what)\r\n        });\r\n      }\r\n    };\r\n\r\n    var check = { matcher: $urlMatcherFactory.isMatcher(what), regex: what instanceof RegExp };\r\n\r\n    for (var n in check) {\r\n      if (check[n]) return this.rule(strategies[n](what, handler));\r\n    }\r\n\r\n    throw new Error(\"invalid 'what' in when()\");\r\n  };\r\n\r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.router.$urlRouterProvider#deferIntercept\r\n   * @methodOf ui.router.router.$urlRouterProvider\r\n   *\r\n   * @description\r\n   * Disables (or enables) deferring location change interception.\r\n   *\r\n   * If you wish to customize the behavior of syncing the URL (for example, if you wish to\r\n   * defer a transition but maintain the current URL), call this method at configuration time.\r\n   * Then, at run time, call `$urlRouter.listen()` after you have configured your own\r\n   * `$locationChangeSuccess` event handler.\r\n   *\r\n   * @example\r\n   * <pre>\r\n   * var app = angular.module('app', ['ui.router.router']);\r\n   *\r\n   * app.config(function ($urlRouterProvider) {\r\n   *\r\n   *   // Prevent $urlRouter from automatically intercepting URL changes;\r\n   *   // this allows you to configure custom behavior in between\r\n   *   // location changes and route synchronization:\r\n   *   $urlRouterProvider.deferIntercept();\r\n   *\r\n   * }).run(function ($rootScope, $urlRouter, UserService) {\r\n   *\r\n   *   $rootScope.$on('$locationChangeSuccess', function(e) {\r\n   *     // UserService is an example service for managing user state\r\n   *     if (UserService.isLoggedIn()) return;\r\n   *\r\n   *     // Prevent $urlRouter's default handler from firing\r\n   *     e.preventDefault();\r\n   *\r\n   *     UserService.handleLogin().then(function() {\r\n   *       // Once the user has logged in, sync the current URL\r\n   *       // to the router:\r\n   *       $urlRouter.sync();\r\n   *     });\r\n   *   });\r\n   *\r\n   *   // Configures $urlRouter's listener *after* your custom listener\r\n   *   $urlRouter.listen();\r\n   * });\r\n   * </pre>\r\n   *\r\n   * @param {boolean} defer Indicates whether to defer location change interception. Passing\r\n            no parameter is equivalent to `true`.\r\n   */\r\n  this.deferIntercept = function (defer) {\r\n    if (defer === undefined) defer = true;\r\n    interceptDeferred = defer;\r\n  };\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name ui.router.router.$urlRouter\r\n   *\r\n   * @requires $location\r\n   * @requires $rootScope\r\n   * @requires $injector\r\n   * @requires $browser\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  this.$get = $get;\r\n  $get.$inject = ['$location', '$rootScope', '$injector', '$browser'];\r\n  function $get(   $location,   $rootScope,   $injector,   $browser) {\r\n\r\n    var baseHref = $browser.baseHref(), location = $location.url(), lastPushedUrl;\r\n\r\n    function appendBasePath(url, isHtml5, absolute) {\r\n      if (baseHref === '/') return url;\r\n      if (isHtml5) return baseHref.slice(0, -1) + url;\r\n      if (absolute) return baseHref.slice(1) + url;\r\n      return url;\r\n    }\r\n\r\n    // TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree\r\n    function update(evt) {\r\n      if (evt && evt.defaultPrevented) return;\r\n      var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;\r\n      lastPushedUrl = undefined;\r\n      if (ignoreUpdate) return true;\r\n\r\n      function check(rule) {\r\n        var handled = rule($injector, $location);\r\n\r\n        if (!handled) return false;\r\n        if (isString(handled)) $location.replace().url(handled);\r\n        return true;\r\n      }\r\n      var n = rules.length, i;\r\n\r\n      for (i = 0; i < n; i++) {\r\n        if (check(rules[i])) return;\r\n      }\r\n      // always check otherwise last to allow dynamic updates to the set of rules\r\n      if (otherwise) check(otherwise);\r\n    }\r\n\r\n    function listen() {\r\n      listener = listener || $rootScope.$on('$locationChangeSuccess', update);\r\n      return listener;\r\n    }\r\n\r\n    if (!interceptDeferred) listen();\r\n\r\n    return {\r\n      /**\r\n       * @ngdoc function\r\n       * @name ui.router.router.$urlRouter#sync\r\n       * @methodOf ui.router.router.$urlRouter\r\n       *\r\n       * @description\r\n       * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\r\n       * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\r\n       * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\r\n       * with the transition by calling `$urlRouter.sync()`.\r\n       *\r\n       * @example\r\n       * <pre>\r\n       * angular.module('app', ['ui.router'])\r\n       *   .run(function($rootScope, $urlRouter) {\r\n       *     $rootScope.$on('$locationChangeSuccess', function(evt) {\r\n       *       // Halt state change from even starting\r\n       *       evt.preventDefault();\r\n       *       // Perform custom logic\r\n       *       var meetsRequirement = ...\r\n       *       // Continue with the update and state transition if logic allows\r\n       *       if (meetsRequirement) $urlRouter.sync();\r\n       *     });\r\n       * });\r\n       * </pre>\r\n       */\r\n      sync: function() {\r\n        update();\r\n      },\r\n\r\n      listen: function() {\r\n        return listen();\r\n      },\r\n\r\n      update: function(read) {\r\n        if (read) {\r\n          location = $location.url();\r\n          return;\r\n        }\r\n        if ($location.url() === location) return;\r\n\r\n        $location.url(location);\r\n        $location.replace();\r\n      },\r\n\r\n      push: function(urlMatcher, params, options) {\r\n        $location.url(urlMatcher.format(params || {}));\r\n        lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined;\r\n        if (options && options.replace) $location.replace();\r\n      },\r\n\r\n      /**\r\n       * @ngdoc function\r\n       * @name ui.router.router.$urlRouter#href\r\n       * @methodOf ui.router.router.$urlRouter\r\n       *\r\n       * @description\r\n       * A URL generation method that returns the compiled URL for a given\r\n       * {@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.\r\n       *\r\n       * @example\r\n       * <pre>\r\n       * $bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\r\n       *   person: \"bob\"\r\n       * });\r\n       * // $bob == \"/about/bob\";\r\n       * </pre>\r\n       *\r\n       * @param {UrlMatcher} urlMatcher The `UrlMatcher` object which is used as the template of the URL to generate.\r\n       * @param {object=} params An object of parameter values to fill the matcher's required parameters.\r\n       * @param {object=} options Options object. The options are:\r\n       *\r\n       * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\r\n       *\r\n       * @returns {string} Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\r\n       */\r\n      href: function(urlMatcher, params, options) {\r\n        if (!urlMatcher.validates(params)) return null;\r\n\r\n        var isHtml5 = $locationProvider.html5Mode();\r\n        if (angular.isObject(isHtml5)) {\r\n          isHtml5 = isHtml5.enabled;\r\n        }\r\n        \r\n        var url = urlMatcher.format(params);\r\n        options = options || {};\r\n\r\n        if (!isHtml5 && url !== null) {\r\n          url = \"#\" + $locationProvider.hashPrefix() + url;\r\n        }\r\n        url = appendBasePath(url, isHtml5, options.absolute);\r\n\r\n        if (!options.absolute || !url) {\r\n          return url;\r\n        }\r\n\r\n        var slash = (!isHtml5 && url ? '/' : ''), port = $location.port();\r\n        port = (port === 80 || port === 443 ? '' : ':' + port);\r\n\r\n        return [$location.protocol(), '://', $location.host(), port, slash, url].join('');\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nangular.module('ui.router.router').provider('$urlRouter', $UrlRouterProvider);\r\n\r\n/**\r\n * @ngdoc object\r\n * @name ui.router.state.$stateProvider\r\n *\r\n * @requires ui.router.router.$urlRouterProvider\r\n * @requires ui.router.util.$urlMatcherFactoryProvider\r\n *\r\n * @description\r\n * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\r\n * on state.\r\n *\r\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\r\n * navigation. A state describes (via the controller / template / view properties) what\r\n * the UI looks like and does at that place.\r\n *\r\n * States often have things in common, and the primary way of factoring out these\r\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\r\n * nested states.\r\n *\r\n * The `$stateProvider` provides interfaces to declare these states for your app.\r\n */\r\n$StateProvider.$inject = ['$urlRouterProvider', '$urlMatcherFactoryProvider'];\r\nfunction $StateProvider(   $urlRouterProvider,   $urlMatcherFactory) {\r\n\r\n  var root, states = {}, $state, queue = {}, abstractKey = 'abstract';\r\n\r\n  // Builds state properties from definition passed to registerState()\r\n  var stateBuilder = {\r\n\r\n    // Derive parent state from a hierarchical name only if 'parent' is not explicitly defined.\r\n    // state.children = [];\r\n    // if (parent) parent.children.push(state);\r\n    parent: function(state) {\r\n      if (isDefined(state.parent) && state.parent) return findState(state.parent);\r\n      // regex matches any valid composite state name\r\n      // would match \"contact.list\" but not \"contacts\"\r\n      var compositeName = /^(.+)\\.[^.]+$/.exec(state.name);\r\n      return compositeName ? findState(compositeName[1]) : root;\r\n    },\r\n\r\n    // inherit 'data' from parent and override by own values (if any)\r\n    data: function(state) {\r\n      if (state.parent && state.parent.data) {\r\n        state.data = state.self.data = extend({}, state.parent.data, state.data);\r\n      }\r\n      return state.data;\r\n    },\r\n\r\n    // Build a URLMatcher if necessary, either via a relative or absolute URL\r\n    url: function(state) {\r\n      var url = state.url, config = { params: state.params || {} };\r\n\r\n      if (isString(url)) {\r\n        if (url.charAt(0) == '^') return $urlMatcherFactory.compile(url.substring(1), config);\r\n        return (state.parent.navigable || root).url.concat(url, config);\r\n      }\r\n\r\n      if (!url || $urlMatcherFactory.isMatcher(url)) return url;\r\n      throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\r\n    },\r\n\r\n    // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\r\n    navigable: function(state) {\r\n      return state.url ? state : (state.parent ? state.parent.navigable : null);\r\n    },\r\n\r\n    // Own parameters for this state. state.url.params is already built at this point. Create and add non-url params\r\n    ownParams: function(state) {\r\n      var params = state.url && state.url.params || new $$UMFP.ParamSet();\r\n      forEach(state.params || {}, function(config, id) {\r\n        if (!params[id]) params[id] = new $$UMFP.Param(id, null, config, \"config\");\r\n      });\r\n      return params;\r\n    },\r\n\r\n    // Derive parameters for this state and ensure they're a super-set of parent's parameters\r\n    params: function(state) {\r\n      return state.parent && state.parent.params ? extend(state.parent.params.$$new(), state.ownParams) : new $$UMFP.ParamSet();\r\n    },\r\n\r\n    // If there is no explicit multi-view configuration, make one up so we don't have\r\n    // to handle both cases in the view directive later. Note that having an explicit\r\n    // 'views' property will mean the default unnamed view properties are ignored. This\r\n    // is also a good time to resolve view names to absolute names, so everything is a\r\n    // straight lookup at link time.\r\n    views: function(state) {\r\n      var views = {};\r\n\r\n      forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {\r\n        if (name.indexOf('@') < 0) name += '@' + state.parent.name;\r\n        views[name] = view;\r\n      });\r\n      return views;\r\n    },\r\n\r\n    // Keep a full path from the root down to this state as this is needed for state activation.\r\n    path: function(state) {\r\n      return state.parent ? state.parent.path.concat(state) : []; // exclude root from path\r\n    },\r\n\r\n    // Speed up $state.contains() as it's used a lot\r\n    includes: function(state) {\r\n      var includes = state.parent ? extend({}, state.parent.includes) : {};\r\n      includes[state.name] = true;\r\n      return includes;\r\n    },\r\n\r\n    $delegates: {}\r\n  };\r\n\r\n  function isRelative(stateName) {\r\n    return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\r\n  }\r\n\r\n  function findState(stateOrName, base) {\r\n    if (!stateOrName) return undefined;\r\n\r\n    var isStr = isString(stateOrName),\r\n        name  = isStr ? stateOrName : stateOrName.name,\r\n        path  = isRelative(name);\r\n\r\n    if (path) {\r\n      if (!base) throw new Error(\"No reference point given for path '\"  + name + \"'\");\r\n      base = findState(base);\r\n      \r\n      var rel = name.split(\".\"), i = 0, pathLength = rel.length, current = base;\r\n\r\n      for (; i < pathLength; i++) {\r\n        if (rel[i] === \"\" && i === 0) {\r\n          current = base;\r\n          continue;\r\n        }\r\n        if (rel[i] === \"^\") {\r\n          if (!current.parent) throw new Error(\"Path '\" + name + \"' not valid for state '\" + base.name + \"'\");\r\n          current = current.parent;\r\n          continue;\r\n        }\r\n        break;\r\n      }\r\n      rel = rel.slice(i).join(\".\");\r\n      name = current.name + (current.name && rel ? \".\" : \"\") + rel;\r\n    }\r\n    var state = states[name];\r\n\r\n    if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\r\n      return state;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  function queueState(parentName, state) {\r\n    if (!queue[parentName]) {\r\n      queue[parentName] = [];\r\n    }\r\n    queue[parentName].push(state);\r\n  }\r\n\r\n  function flushQueuedChildren(parentName) {\r\n    var queued = queue[parentName] || [];\r\n    while(queued.length) {\r\n      registerState(queued.shift());\r\n    }\r\n  }\r\n\r\n  function registerState(state) {\r\n    // Wrap a new object around the state so we can store our private details easily.\r\n    state = inherit(state, {\r\n      self: state,\r\n      resolve: state.resolve || {},\r\n      toString: function() { return this.name; }\r\n    });\r\n\r\n    var name = state.name;\r\n    if (!isString(name) || name.indexOf('@') >= 0) throw new Error(\"State must have a valid name\");\r\n    if (states.hasOwnProperty(name)) throw new Error(\"State '\" + name + \"'' is already defined\");\r\n\r\n    // Get parent name\r\n    var parentName = (name.indexOf('.') !== -1) ? name.substring(0, name.lastIndexOf('.'))\r\n        : (isString(state.parent)) ? state.parent\r\n        : (isObject(state.parent) && isString(state.parent.name)) ? state.parent.name\r\n        : '';\r\n\r\n    // If parent is not registered yet, add state to queue and register later\r\n    if (parentName && !states[parentName]) {\r\n      return queueState(parentName, state.self);\r\n    }\r\n\r\n    for (var key in stateBuilder) {\r\n      if (isFunction(stateBuilder[key])) state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]);\r\n    }\r\n    states[name] = state;\r\n\r\n    // Register the state in the global state list and with $urlRouter if necessary.\r\n    if (!state[abstractKey] && state.url) {\r\n      $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {\r\n        if ($state.$current.navigable != state || !equalForKeys($match, $stateParams)) {\r\n          $state.transitionTo(state, $match, { inherit: true, location: false });\r\n        }\r\n      }]);\r\n    }\r\n\r\n    // Register any queued children\r\n    flushQueuedChildren(name);\r\n\r\n    return state;\r\n  }\r\n\r\n  // Checks text to see if it looks like a glob.\r\n  function isGlob (text) {\r\n    return text.indexOf('*') > -1;\r\n  }\r\n\r\n  // Returns true if glob matches current $state name.\r\n  function doesStateMatchGlob (glob) {\r\n    var globSegments = glob.split('.'),\r\n        segments = $state.$current.name.split('.');\r\n\r\n    //match greedy starts\r\n    if (globSegments[0] === '**') {\r\n       segments = segments.slice(indexOf(segments, globSegments[1]));\r\n       segments.unshift('**');\r\n    }\r\n    //match greedy ends\r\n    if (globSegments[globSegments.length - 1] === '**') {\r\n       segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE);\r\n       segments.push('**');\r\n    }\r\n\r\n    if (globSegments.length != segments.length) {\r\n      return false;\r\n    }\r\n\r\n    //match single stars\r\n    for (var i = 0, l = globSegments.length; i < l; i++) {\r\n      if (globSegments[i] === '*') {\r\n        segments[i] = '*';\r\n      }\r\n    }\r\n\r\n    return segments.join('') === globSegments.join('');\r\n  }\r\n\r\n\r\n  // Implicit root state that is always active\r\n  root = registerState({\r\n    name: '',\r\n    url: '^',\r\n    views: null,\r\n    'abstract': true\r\n  });\r\n  root.navigable = null;\r\n\r\n\r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.state.$stateProvider#decorator\r\n   * @methodOf ui.router.state.$stateProvider\r\n   *\r\n   * @description\r\n   * Allows you to extend (carefully) or override (at your own peril) the \r\n   * `stateBuilder` object used internally by `$stateProvider`. This can be used \r\n   * to add custom functionality to ui-router, for example inferring templateUrl \r\n   * based on the state name.\r\n   *\r\n   * When passing only a name, it returns the current (original or decorated) builder\r\n   * function that matches `name`.\r\n   *\r\n   * The builder functions that can be decorated are listed below. Though not all\r\n   * necessarily have a good use case for decoration, that is up to you to decide.\r\n   *\r\n   * In addition, users can attach custom decorators, which will generate new \r\n   * properties within the state's internal definition. There is currently no clear \r\n   * use-case for this beyond accessing internal states (i.e. $state.$current), \r\n   * however, expect this to become increasingly relevant as we introduce additional \r\n   * meta-programming features.\r\n   *\r\n   * **Warning**: Decorators should not be interdependent because the order of \r\n   * execution of the builder functions in non-deterministic. Builder functions \r\n   * should only be dependent on the state definition object and super function.\r\n   *\r\n   *\r\n   * Existing builder functions and current return values:\r\n   *\r\n   * - **parent** `{object}` - returns the parent state object.\r\n   * - **data** `{object}` - returns state data, including any inherited data that is not\r\n   *   overridden by own values (if any).\r\n   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\r\n   *   or `null`.\r\n   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is \r\n   *   navigable).\r\n   * - **params** `{object}` - returns an array of state params that are ensured to \r\n   *   be a super-set of parent's params.\r\n   * - **views** `{object}` - returns a views object where each key is an absolute view \r\n   *   name (i.e. \"viewName@stateName\") and each value is the config object \r\n   *   (template, controller) for the view. Even when you don't use the views object \r\n   *   explicitly on a state config, one is still created for you internally.\r\n   *   So by decorating this builder function you have access to decorating template \r\n   *   and controller properties.\r\n   * - **ownParams** `{object}` - returns an array of params that belong to the state, \r\n   *   not including any params defined by ancestor states.\r\n   * - **path** `{string}` - returns the full path from the root down to this state. \r\n   *   Needed for state activation.\r\n   * - **includes** `{object}` - returns an object that includes every state that \r\n   *   would pass a `$state.includes()` test.\r\n   *\r\n   * @example\r\n   * <pre>\r\n   * // Override the internal 'views' builder with a function that takes the state\r\n   * // definition, and a reference to the internal function being overridden:\r\n   * $stateProvider.decorator('views', function (state, parent) {\r\n   *   var result = {},\r\n   *       views = parent(state);\r\n   *\r\n   *   angular.forEach(views, function (config, name) {\r\n   *     var autoName = (state.name + '.' + name).replace('.', '/');\r\n   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\r\n   *     result[name] = config;\r\n   *   });\r\n   *   return result;\r\n   * });\r\n   *\r\n   * $stateProvider.state('home', {\r\n   *   views: {\r\n   *     'contact.list': { controller: 'ListController' },\r\n   *     'contact.item': { controller: 'ItemController' }\r\n   *   }\r\n   * });\r\n   *\r\n   * // ...\r\n   *\r\n   * $state.go('home');\r\n   * // Auto-populates list and item views with /partials/home/contact/list.html,\r\n   * // and /partials/home/contact/item.html, respectively.\r\n   * </pre>\r\n   *\r\n   * @param {string} name The name of the builder function to decorate. \r\n   * @param {object} func A function that is responsible for decorating the original \r\n   * builder function. The function receives two parameters:\r\n   *\r\n   *   - `{object}` - state - The state config object.\r\n   *   - `{object}` - super - The original builder function.\r\n   *\r\n   * @return {object} $stateProvider - $stateProvider instance\r\n   */\r\n  this.decorator = decorator;\r\n  function decorator(name, func) {\r\n    /*jshint validthis: true */\r\n    if (isString(name) && !isDefined(func)) {\r\n      return stateBuilder[name];\r\n    }\r\n    if (!isFunction(func) || !isString(name)) {\r\n      return this;\r\n    }\r\n    if (stateBuilder[name] && !stateBuilder.$delegates[name]) {\r\n      stateBuilder.$delegates[name] = stateBuilder[name];\r\n    }\r\n    stateBuilder[name] = func;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.state.$stateProvider#state\r\n   * @methodOf ui.router.state.$stateProvider\r\n   *\r\n   * @description\r\n   * Registers a state configuration under a given state name. The stateConfig object\r\n   * has the following acceptable properties.\r\n   *\r\n   * @param {string} name A unique state name, e.g. \"home\", \"about\", \"contacts\".\r\n   * To create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".\r\n   * @param {object} stateConfig State configuration object.\r\n   * @param {string|function=} stateConfig.template\r\n   * <a id='template'></a>\r\n   *   html template as a string or a function that returns\r\n   *   an html template as a string which should be used by the uiView directives. This property \r\n   *   takes precedence over templateUrl.\r\n   *   \r\n   *   If `template` is a function, it will be called with the following parameters:\r\n   *\r\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\r\n   *     applying the current state\r\n   *\r\n   * <pre>template:\r\n   *   \"<h1>inline template definition</h1>\" +\r\n   *   \"<div ui-view></div>\"</pre>\r\n   * <pre>template: function(params) {\r\n   *       return \"<h1>generated template</h1>\"; }</pre>\r\n   * </div>\r\n   *\r\n   * @param {string|function=} stateConfig.templateUrl\r\n   * <a id='templateUrl'></a>\r\n   *\r\n   *   path or function that returns a path to an html\r\n   *   template that should be used by uiView.\r\n   *   \r\n   *   If `templateUrl` is a function, it will be called with the following parameters:\r\n   *\r\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by \r\n   *     applying the current state\r\n   *\r\n   * <pre>templateUrl: \"home.html\"</pre>\r\n   * <pre>templateUrl: function(params) {\r\n   *     return myTemplates[params.pageId]; }</pre>\r\n   *\r\n   * @param {function=} stateConfig.templateProvider\r\n   * <a id='templateProvider'></a>\r\n   *    Provider function that returns HTML content string.\r\n   * <pre> templateProvider:\r\n   *       function(MyTemplateService, params) {\r\n   *         return MyTemplateService.getTemplate(params.pageId);\r\n   *       }</pre>\r\n   *\r\n   * @param {string|function=} stateConfig.controller\r\n   * <a id='controller'></a>\r\n   *\r\n   *  Controller fn that should be associated with newly\r\n   *   related scope or the name of a registered controller if passed as a string.\r\n   *   Optionally, the ControllerAs may be declared here.\r\n   * <pre>controller: \"MyRegisteredController\"</pre>\r\n   * <pre>controller:\r\n   *     \"MyRegisteredController as fooCtrl\"}</pre>\r\n   * <pre>controller: function($scope, MyService) {\r\n   *     $scope.data = MyService.getData(); }</pre>\r\n   *\r\n   * @param {function=} stateConfig.controllerProvider\r\n   * <a id='controllerProvider'></a>\r\n   *\r\n   * Injectable provider function that returns the actual controller or string.\r\n   * <pre>controllerProvider:\r\n   *   function(MyResolveData) {\r\n   *     if (MyResolveData.foo)\r\n   *       return \"FooCtrl\"\r\n   *     else if (MyResolveData.bar)\r\n   *       return \"BarCtrl\";\r\n   *     else return function($scope) {\r\n   *       $scope.baz = \"Qux\";\r\n   *     }\r\n   *   }</pre>\r\n   *\r\n   * @param {string=} stateConfig.controllerAs\r\n   * <a id='controllerAs'></a>\r\n   * \r\n   * A controller alias name. If present the controller will be\r\n   *   published to scope under the controllerAs name.\r\n   * <pre>controllerAs: \"myCtrl\"</pre>\r\n   *\r\n   * @param {object=} stateConfig.resolve\r\n   * <a id='resolve'></a>\r\n   *\r\n   * An optional map&lt;string, function&gt; of dependencies which\r\n   *   should be injected into the controller. If any of these dependencies are promises, \r\n   *   the router will wait for them all to be resolved before the controller is instantiated.\r\n   *   If all the promises are resolved successfully, the $stateChangeSuccess event is fired\r\n   *   and the values of the resolved promises are injected into any controllers that reference them.\r\n   *   If any  of the promises are rejected the $stateChangeError event is fired.\r\n   *\r\n   *   The map object is:\r\n   *   \r\n   *   - key - {string}: name of dependency to be injected into controller\r\n   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function, \r\n   *     it is injected and return value it treated as dependency. If result is a promise, it is \r\n   *     resolved before its value is injected into controller.\r\n   *\r\n   * <pre>resolve: {\r\n   *     myResolve1:\r\n   *       function($http, $stateParams) {\r\n   *         return $http.get(\"/api/foos/\"+stateParams.fooID);\r\n   *       }\r\n   *     }</pre>\r\n   *\r\n   * @param {string=} stateConfig.url\r\n   * <a id='url'></a>\r\n   *\r\n   *   A url fragment with optional parameters. When a state is navigated or\r\n   *   transitioned to, the `$stateParams` service will be populated with any \r\n   *   parameters that were passed.\r\n   *\r\n   * examples:\r\n   * <pre>url: \"/home\"\r\n   * url: \"/users/:userid\"\r\n   * url: \"/books/{bookid:[a-zA-Z_-]}\"\r\n   * url: \"/books/{categoryid:int}\"\r\n   * url: \"/books/{publishername:string}/{categoryid:int}\"\r\n   * url: \"/messages?before&after\"\r\n   * url: \"/messages?{before:date}&{after:date}\"</pre>\r\n   * url: \"/messages/:mailboxid?{before:date}&{after:date}\"\r\n   *\r\n   * @param {object=} stateConfig.views\r\n   * <a id='views'></a>\r\n   * an optional map&lt;string, object&gt; which defined multiple views, or targets views\r\n   * manually/explicitly.\r\n   *\r\n   * Examples:\r\n   *\r\n   * Targets three named `ui-view`s in the parent state's template\r\n   * <pre>views: {\r\n   *     header: {\r\n   *       controller: \"headerCtrl\",\r\n   *       templateUrl: \"header.html\"\r\n   *     }, body: {\r\n   *       controller: \"bodyCtrl\",\r\n   *       templateUrl: \"body.html\"\r\n   *     }, footer: {\r\n   *       controller: \"footCtrl\",\r\n   *       templateUrl: \"footer.html\"\r\n   *     }\r\n   *   }</pre>\r\n   *\r\n   * Targets named `ui-view=\"header\"` from grandparent state 'top''s template, and named `ui-view=\"body\" from parent state's template.\r\n   * <pre>views: {\r\n   *     'header@top': {\r\n   *       controller: \"msgHeaderCtrl\",\r\n   *       templateUrl: \"msgHeader.html\"\r\n   *     }, 'body': {\r\n   *       controller: \"messagesCtrl\",\r\n   *       templateUrl: \"messages.html\"\r\n   *     }\r\n   *   }</pre>\r\n   *\r\n   * @param {boolean=} [stateConfig.abstract=false]\r\n   * <a id='abstract'></a>\r\n   * An abstract state will never be directly activated,\r\n   *   but can provide inherited properties to its common children states.\r\n   * <pre>abstract: true</pre>\r\n   *\r\n   * @param {function=} stateConfig.onEnter\r\n   * <a id='onEnter'></a>\r\n   *\r\n   * Callback function for when a state is entered. Good way\r\n   *   to trigger an action or dispatch an event, such as opening a dialog.\r\n   * If minifying your scripts, make sure to explictly annotate this function,\r\n   * because it won't be automatically annotated by your build tools.\r\n   *\r\n   * <pre>onEnter: function(MyService, $stateParams) {\r\n   *     MyService.foo($stateParams.myParam);\r\n   * }</pre>\r\n   *\r\n   * @param {function=} stateConfig.onExit\r\n   * <a id='onExit'></a>\r\n   *\r\n   * Callback function for when a state is exited. Good way to\r\n   *   trigger an action or dispatch an event, such as opening a dialog.\r\n   * If minifying your scripts, make sure to explictly annotate this function,\r\n   * because it won't be automatically annotated by your build tools.\r\n   *\r\n   * <pre>onExit: function(MyService, $stateParams) {\r\n   *     MyService.cleanup($stateParams.myParam);\r\n   * }</pre>\r\n   *\r\n   * @param {boolean=} [stateConfig.reloadOnSearch=true]\r\n   * <a id='reloadOnSearch'></a>\r\n   *\r\n   * If `false`, will not retrigger the same state\r\n   *   just because a search/query parameter has changed (via $location.search() or $location.hash()). \r\n   *   Useful for when you'd like to modify $location.search() without triggering a reload.\r\n   * <pre>reloadOnSearch: false</pre>\r\n   *\r\n   * @param {object=} stateConfig.data\r\n   * <a id='data'></a>\r\n   *\r\n   * Arbitrary data object, useful for custom configuration.  The parent state's `data` is\r\n   *   prototypally inherited.  In other words, adding a data property to a state adds it to\r\n   *   the entire subtree via prototypal inheritance.\r\n   *\r\n   * <pre>data: {\r\n   *     requiredRole: 'foo'\r\n   * } </pre>\r\n   *\r\n   * @param {object=} stateConfig.params\r\n   * <a id='params'></a>\r\n   *\r\n   * A map which optionally configures parameters declared in the `url`, or\r\n   *   defines additional non-url parameters.  For each parameter being\r\n   *   configured, add a configuration object keyed to the name of the parameter.\r\n   *\r\n   *   Each parameter configuration object may contain the following properties:\r\n   *\r\n   *   - ** value ** - {object|function=}: specifies the default value for this\r\n   *     parameter.  This implicitly sets this parameter as optional.\r\n   *\r\n   *     When UI-Router routes to a state and no value is\r\n   *     specified for this parameter in the URL or transition, the\r\n   *     default value will be used instead.  If `value` is a function,\r\n   *     it will be injected and invoked, and the return value used.\r\n   *\r\n   *     *Note*: `undefined` is treated as \"no default value\" while `null`\r\n   *     is treated as \"the default value is `null`\".\r\n   *\r\n   *     *Shorthand*: If you only need to configure the default value of the\r\n   *     parameter, you may use a shorthand syntax.   In the **`params`**\r\n   *     map, instead mapping the param name to a full parameter configuration\r\n   *     object, simply set map it to the default parameter value, e.g.:\r\n   *\r\n   * <pre>// define a parameter's default value\r\n   * params: {\r\n   *     param1: { value: \"defaultValue\" }\r\n   * }\r\n   * // shorthand default values\r\n   * params: {\r\n   *     param1: \"defaultValue\",\r\n   *     param2: \"param2Default\"\r\n   * }</pre>\r\n   *\r\n   *   - ** array ** - {boolean=}: *(default: false)* If true, the param value will be\r\n   *     treated as an array of values.  If you specified a Type, the value will be\r\n   *     treated as an array of the specified Type.  Note: query parameter values\r\n   *     default to a special `\"auto\"` mode.\r\n   *\r\n   *     For query parameters in `\"auto\"` mode, if multiple  values for a single parameter\r\n   *     are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values\r\n   *     are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if\r\n   *     only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single\r\n   *     value (e.g.: `{ foo: '1' }`).\r\n   *\r\n   * <pre>params: {\r\n   *     param1: { array: true }\r\n   * }</pre>\r\n   *\r\n   *   - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when\r\n   *     the current parameter value is the same as the default value. If `squash` is not set, it uses the\r\n   *     configured default squash policy.\r\n   *     (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})\r\n   *\r\n   *   There are three squash settings:\r\n   *\r\n   *     - false: The parameter's default value is not squashed.  It is encoded and included in the URL\r\n   *     - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed\r\n   *       by slashes in the state's `url` declaration, then one of those slashes are omitted.\r\n   *       This can allow for cleaner looking URLs.\r\n   *     - `\"<arbitrary string>\"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.\r\n   *\r\n   * <pre>params: {\r\n   *     param1: {\r\n   *       value: \"defaultId\",\r\n   *       squash: true\r\n   * } }\r\n   * // squash \"defaultValue\" to \"~\"\r\n   * params: {\r\n   *     param1: {\r\n   *       value: \"defaultValue\",\r\n   *       squash: \"~\"\r\n   * } }\r\n   * </pre>\r\n   *\r\n   *\r\n   * @example\r\n   * <pre>\r\n   * // Some state name examples\r\n   *\r\n   * // stateName can be a single top-level name (must be unique).\r\n   * $stateProvider.state(\"home\", {});\r\n   *\r\n   * // Or it can be a nested state name. This state is a child of the\r\n   * // above \"home\" state.\r\n   * $stateProvider.state(\"home.newest\", {});\r\n   *\r\n   * // Nest states as deeply as needed.\r\n   * $stateProvider.state(\"home.newest.abc.xyz.inception\", {});\r\n   *\r\n   * // state() returns $stateProvider, so you can chain state declarations.\r\n   * $stateProvider\r\n   *   .state(\"home\", {})\r\n   *   .state(\"about\", {})\r\n   *   .state(\"contacts\", {});\r\n   * </pre>\r\n   *\r\n   */\r\n  this.state = state;\r\n  function state(name, definition) {\r\n    /*jshint validthis: true */\r\n    if (isObject(name)) definition = name;\r\n    else definition.name = name;\r\n    registerState(definition);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name ui.router.state.$state\r\n   *\r\n   * @requires $rootScope\r\n   * @requires $q\r\n   * @requires ui.router.state.$view\r\n   * @requires $injector\r\n   * @requires ui.router.util.$resolve\r\n   * @requires ui.router.state.$stateParams\r\n   * @requires ui.router.router.$urlRouter\r\n   *\r\n   * @property {object} params A param object, e.g. {sectionId: section.id)}, that \r\n   * you'd like to test against the current active state.\r\n   * @property {object} current A reference to the state's config object. However \r\n   * you passed it in. Useful for accessing custom data.\r\n   * @property {object} transition Currently pending transition. A promise that'll \r\n   * resolve or reject.\r\n   *\r\n   * @description\r\n   * `$state` service is responsible for representing states as well as transitioning\r\n   * between them. It also provides interfaces to ask for current state or even states\r\n   * you're coming from.\r\n   */\r\n  this.$get = $get;\r\n  $get.$inject = ['$rootScope', '$q', '$view', '$injector', '$resolve', '$stateParams', '$urlRouter', '$location', '$urlMatcherFactory'];\r\n  function $get(   $rootScope,   $q,   $view,   $injector,   $resolve,   $stateParams,   $urlRouter,   $location,   $urlMatcherFactory) {\r\n\r\n    var TransitionSuperseded = $q.reject(new Error('transition superseded'));\r\n    var TransitionPrevented = $q.reject(new Error('transition prevented'));\r\n    var TransitionAborted = $q.reject(new Error('transition aborted'));\r\n    var TransitionFailed = $q.reject(new Error('transition failed'));\r\n\r\n    // Handles the case where a state which is the target of a transition is not found, and the user\r\n    // can optionally retry or defer the transition\r\n    function handleRedirect(redirect, state, params, options) {\r\n      /**\r\n       * @ngdoc event\r\n       * @name ui.router.state.$state#$stateNotFound\r\n       * @eventOf ui.router.state.$state\r\n       * @eventType broadcast on root scope\r\n       * @description\r\n       * Fired when a requested state **cannot be found** using the provided state name during transition.\r\n       * The event is broadcast allowing any handlers a single chance to deal with the error (usually by\r\n       * lazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,\r\n       * you can see its three properties in the example. You can use `event.preventDefault()` to abort the\r\n       * transition and the promise returned from `go` will be rejected with a `'transition aborted'` value.\r\n       *\r\n       * @param {Object} event Event object.\r\n       * @param {Object} unfoundState Unfound State information. Contains: `to, toParams, options` properties.\r\n       * @param {State} fromState Current state object.\r\n       * @param {Object} fromParams Current state params.\r\n       *\r\n       * @example\r\n       *\r\n       * <pre>\r\n       * // somewhere, assume lazy.state has not been defined\r\n       * $state.go(\"lazy.state\", {a:1, b:2}, {inherit:false});\r\n       *\r\n       * // somewhere else\r\n       * $scope.$on('$stateNotFound',\r\n       * function(event, unfoundState, fromState, fromParams){\r\n       *     console.log(unfoundState.to); // \"lazy.state\"\r\n       *     console.log(unfoundState.toParams); // {a:1, b:2}\r\n       *     console.log(unfoundState.options); // {inherit:false} + default options\r\n       * })\r\n       * </pre>\r\n       */\r\n      var evt = $rootScope.$broadcast('$stateNotFound', redirect, state, params);\r\n\r\n      if (evt.defaultPrevented) {\r\n        $urlRouter.update();\r\n        return TransitionAborted;\r\n      }\r\n\r\n      if (!evt.retry) {\r\n        return null;\r\n      }\r\n\r\n      // Allow the handler to return a promise to defer state lookup retry\r\n      if (options.$retry) {\r\n        $urlRouter.update();\r\n        return TransitionFailed;\r\n      }\r\n      var retryTransition = $state.transition = $q.when(evt.retry);\r\n\r\n      retryTransition.then(function() {\r\n        if (retryTransition !== $state.transition) return TransitionSuperseded;\r\n        redirect.options.$retry = true;\r\n        return $state.transitionTo(redirect.to, redirect.toParams, redirect.options);\r\n      }, function() {\r\n        return TransitionAborted;\r\n      });\r\n      $urlRouter.update();\r\n\r\n      return retryTransition;\r\n    }\r\n\r\n    root.locals = { resolve: null, globals: { $stateParams: {} } };\r\n\r\n    $state = {\r\n      params: {},\r\n      current: root.self,\r\n      $current: root,\r\n      transition: null\r\n    };\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name ui.router.state.$state#reload\r\n     * @methodOf ui.router.state.$state\r\n     *\r\n     * @description\r\n     * A method that force reloads the current state. All resolves are re-resolved, events are not re-fired, \r\n     * and controllers reinstantiated (bug with controllers reinstantiating right now, fixing soon).\r\n     *\r\n     * @example\r\n     * <pre>\r\n     * var app angular.module('app', ['ui.router']);\r\n     *\r\n     * app.controller('ctrl', function ($scope, $state) {\r\n     *   $scope.reload = function(){\r\n     *     $state.reload();\r\n     *   }\r\n     * });\r\n     * </pre>\r\n     *\r\n     * `reload()` is just an alias for:\r\n     * <pre>\r\n     * $state.transitionTo($state.current, $stateParams, { \r\n     *   reload: true, inherit: false, notify: true\r\n     * });\r\n     * </pre>\r\n     *\r\n     * @returns {promise} A promise representing the state of the new transition. See\r\n     * {@link ui.router.state.$state#methods_go $state.go}.\r\n     */\r\n    $state.reload = function reload() {\r\n      return $state.transitionTo($state.current, $stateParams, { reload: true, inherit: false, notify: true });\r\n    };\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name ui.router.state.$state#go\r\n     * @methodOf ui.router.state.$state\r\n     *\r\n     * @description\r\n     * Convenience method for transitioning to a new state. `$state.go` calls \r\n     * `$state.transitionTo` internally but automatically sets options to \r\n     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`. \r\n     * This allows you to easily use an absolute or relative to path and specify \r\n     * only the parameters you'd like to update (while letting unspecified parameters \r\n     * inherit from the currently active ancestor states).\r\n     *\r\n     * @example\r\n     * <pre>\r\n     * var app = angular.module('app', ['ui.router']);\r\n     *\r\n     * app.controller('ctrl', function ($scope, $state) {\r\n     *   $scope.changeState = function () {\r\n     *     $state.go('contact.detail');\r\n     *   };\r\n     * });\r\n     * </pre>\r\n     * <img src='../ngdoc_assets/StateGoExamples.png'/>\r\n     *\r\n     * @param {string} to Absolute state name or relative state path. Some examples:\r\n     *\r\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\r\n     * - `$state.go('^')` - will go to a parent state\r\n     * - `$state.go('^.sibling')` - will go to a sibling state\r\n     * - `$state.go('.child.grandchild')` - will go to grandchild state\r\n     *\r\n     * @param {object=} params A map of the parameters that will be sent to the state, \r\n     * will populate $stateParams. Any parameters that are not specified will be inherited from currently \r\n     * defined parameters. This allows, for example, going to a sibling state that shares parameters\r\n     * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.\r\n     * transitioning to a sibling will get you the parameters for all parents, transitioning to a child\r\n     * will get you all current parameters, etc.\r\n     * @param {object=} options Options object. The options are:\r\n     *\r\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\r\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\r\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\r\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \r\n     *    defines which state to be relative from.\r\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\r\n     * - **`reload`** (v0.2.5) - {boolean=false}, If `true` will force transition even if the state or params \r\n     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\r\n     *    use this when you want to force a reload when *everything* is the same, including search params.\r\n     *\r\n     * @returns {promise} A promise representing the state of the new transition.\r\n     *\r\n     * Possible success values:\r\n     *\r\n     * - $state.current\r\n     *\r\n     * <br/>Possible rejection values:\r\n     *\r\n     * - 'transition superseded' - when a newer transition has been started after this one\r\n     * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener\r\n     * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or\r\n     *   when a `$stateNotFound` `event.retry` promise errors.\r\n     * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.\r\n     * - *resolve error* - when an error has occurred with a `resolve`\r\n     *\r\n     */\r\n    $state.go = function go(to, params, options) {\r\n      return $state.transitionTo(to, params, extend({ inherit: true, relative: $state.$current }, options));\r\n    };\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name ui.router.state.$state#transitionTo\r\n     * @methodOf ui.router.state.$state\r\n     *\r\n     * @description\r\n     * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\r\n     * uses `transitionTo` internally. `$state.go` is recommended in most situations.\r\n     *\r\n     * @example\r\n     * <pre>\r\n     * var app = angular.module('app', ['ui.router']);\r\n     *\r\n     * app.controller('ctrl', function ($scope, $state) {\r\n     *   $scope.changeState = function () {\r\n     *     $state.transitionTo('contact.detail');\r\n     *   };\r\n     * });\r\n     * </pre>\r\n     *\r\n     * @param {string} to State name.\r\n     * @param {object=} toParams A map of the parameters that will be sent to the state,\r\n     * will populate $stateParams.\r\n     * @param {object=} options Options object. The options are:\r\n     *\r\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\r\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\r\n     * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.\r\n     * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'), \r\n     *    defines which state to be relative from.\r\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\r\n     * - **`reload`** (v0.2.5) - {boolean=false}, If `true` will force transition even if the state or params \r\n     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\r\n     *    use this when you want to force a reload when *everything* is the same, including search params.\r\n     *\r\n     * @returns {promise} A promise representing the state of the new transition. See\r\n     * {@link ui.router.state.$state#methods_go $state.go}.\r\n     */\r\n    $state.transitionTo = function transitionTo(to, toParams, options) {\r\n      toParams = toParams || {};\r\n      options = extend({\r\n        location: true, inherit: false, relative: null, notify: true, reload: false, $retry: false\r\n      }, options || {});\r\n\r\n      var from = $state.$current, fromParams = $state.params, fromPath = from.path;\r\n      var evt, toState = findState(to, options.relative);\r\n\r\n      if (!isDefined(toState)) {\r\n        var redirect = { to: to, toParams: toParams, options: options };\r\n        var redirectResult = handleRedirect(redirect, from.self, fromParams, options);\r\n\r\n        if (redirectResult) {\r\n          return redirectResult;\r\n        }\r\n\r\n        // Always retry once if the $stateNotFound was not prevented\r\n        // (handles either redirect changed or state lazy-definition)\r\n        to = redirect.to;\r\n        toParams = redirect.toParams;\r\n        options = redirect.options;\r\n        toState = findState(to, options.relative);\r\n\r\n        if (!isDefined(toState)) {\r\n          if (!options.relative) throw new Error(\"No such state '\" + to + \"'\");\r\n          throw new Error(\"Could not resolve '\" + to + \"' from state '\" + options.relative + \"'\");\r\n        }\r\n      }\r\n      if (toState[abstractKey]) throw new Error(\"Cannot transition to abstract state '\" + to + \"'\");\r\n      if (options.inherit) toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState);\r\n      if (!toState.params.$$validates(toParams)) return TransitionFailed;\r\n\r\n      toParams = toState.params.$$values(toParams);\r\n      to = toState;\r\n\r\n      var toPath = to.path;\r\n\r\n      // Starting from the root of the path, keep all levels that haven't changed\r\n      var keep = 0, state = toPath[keep], locals = root.locals, toLocals = [];\r\n\r\n      if (!options.reload) {\r\n        while (state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams)) {\r\n          locals = toLocals[keep] = state.locals;\r\n          keep++;\r\n          state = toPath[keep];\r\n        }\r\n      }\r\n\r\n      // If we're going to the same state and all locals are kept, we've got nothing to do.\r\n      // But clear 'transition', as we still want to cancel any other pending transitions.\r\n      // TODO: We may not want to bump 'transition' if we're called from a location change\r\n      // that we've initiated ourselves, because we might accidentally abort a legitimate\r\n      // transition initiated from code?\r\n      if (shouldTriggerReload(to, from, locals, options)) {\r\n        if (to.self.reloadOnSearch !== false) $urlRouter.update();\r\n        $state.transition = null;\r\n        return $q.when($state.current);\r\n      }\r\n\r\n      // Filter parameters before we pass them to event handlers etc.\r\n      toParams = filterByKeys(to.params.$$keys(), toParams || {});\r\n\r\n      // Broadcast start event and cancel the transition if requested\r\n      if (options.notify) {\r\n        /**\r\n         * @ngdoc event\r\n         * @name ui.router.state.$state#$stateChangeStart\r\n         * @eventOf ui.router.state.$state\r\n         * @eventType broadcast on root scope\r\n         * @description\r\n         * Fired when the state transition **begins**. You can use `event.preventDefault()`\r\n         * to prevent the transition from happening and then the transition promise will be\r\n         * rejected with a `'transition prevented'` value.\r\n         *\r\n         * @param {Object} event Event object.\r\n         * @param {State} toState The state being transitioned to.\r\n         * @param {Object} toParams The params supplied to the `toState`.\r\n         * @param {State} fromState The current state, pre-transition.\r\n         * @param {Object} fromParams The params supplied to the `fromState`.\r\n         *\r\n         * @example\r\n         *\r\n         * <pre>\r\n         * $rootScope.$on('$stateChangeStart',\r\n         * function(event, toState, toParams, fromState, fromParams){\r\n         *     event.preventDefault();\r\n         *     // transitionTo() promise will be rejected with\r\n         *     // a 'transition prevented' error\r\n         * })\r\n         * </pre>\r\n         */\r\n        if ($rootScope.$broadcast('$stateChangeStart', to.self, toParams, from.self, fromParams).defaultPrevented) {\r\n          $urlRouter.update();\r\n          return TransitionPrevented;\r\n        }\r\n      }\r\n\r\n      // Resolve locals for the remaining states, but don't update any global state just\r\n      // yet -- if anything fails to resolve the current state needs to remain untouched.\r\n      // We also set up an inheritance chain for the locals here. This allows the view directive\r\n      // to quickly look up the correct definition for each view in the current state. Even\r\n      // though we create the locals object itself outside resolveState(), it is initially\r\n      // empty and gets filled asynchronously. We need to keep track of the promise for the\r\n      // (fully resolved) current locals, and pass this down the chain.\r\n      var resolved = $q.when(locals);\r\n\r\n      for (var l = keep; l < toPath.length; l++, state = toPath[l]) {\r\n        locals = toLocals[l] = inherit(locals);\r\n        resolved = resolveState(state, toParams, state === to, resolved, locals, options);\r\n      }\r\n\r\n      // Once everything is resolved, we are ready to perform the actual transition\r\n      // and return a promise for the new state. We also keep track of what the\r\n      // current promise is, so that we can detect overlapping transitions and\r\n      // keep only the outcome of the last transition.\r\n      var transition = $state.transition = resolved.then(function () {\r\n        var l, entering, exiting;\r\n\r\n        if ($state.transition !== transition) return TransitionSuperseded;\r\n\r\n        // Exit 'from' states not kept\r\n        for (l = fromPath.length - 1; l >= keep; l--) {\r\n          exiting = fromPath[l];\r\n          if (exiting.self.onExit) {\r\n            $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals);\r\n          }\r\n          exiting.locals = null;\r\n        }\r\n\r\n        // Enter 'to' states not kept\r\n        for (l = keep; l < toPath.length; l++) {\r\n          entering = toPath[l];\r\n          entering.locals = toLocals[l];\r\n          if (entering.self.onEnter) {\r\n            $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);\r\n          }\r\n        }\r\n\r\n        // Run it again, to catch any transitions in callbacks\r\n        if ($state.transition !== transition) return TransitionSuperseded;\r\n\r\n        // Update globals in $state\r\n        $state.$current = to;\r\n        $state.current = to.self;\r\n        $state.params = toParams;\r\n        copy($state.params, $stateParams);\r\n        $state.transition = null;\r\n\r\n        if (options.location && to.navigable) {\r\n          $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {\r\n            $$avoidResync: true, replace: options.location === 'replace'\r\n          });\r\n        }\r\n\r\n        if (options.notify) {\r\n        /**\r\n         * @ngdoc event\r\n         * @name ui.router.state.$state#$stateChangeSuccess\r\n         * @eventOf ui.router.state.$state\r\n         * @eventType broadcast on root scope\r\n         * @description\r\n         * Fired once the state transition is **complete**.\r\n         *\r\n         * @param {Object} event Event object.\r\n         * @param {State} toState The state being transitioned to.\r\n         * @param {Object} toParams The params supplied to the `toState`.\r\n         * @param {State} fromState The current state, pre-transition.\r\n         * @param {Object} fromParams The params supplied to the `fromState`.\r\n         */\r\n          $rootScope.$broadcast('$stateChangeSuccess', to.self, toParams, from.self, fromParams);\r\n        }\r\n        $urlRouter.update(true);\r\n\r\n        return $state.current;\r\n      }, function (error) {\r\n        if ($state.transition !== transition) return TransitionSuperseded;\r\n\r\n        $state.transition = null;\r\n        /**\r\n         * @ngdoc event\r\n         * @name ui.router.state.$state#$stateChangeError\r\n         * @eventOf ui.router.state.$state\r\n         * @eventType broadcast on root scope\r\n         * @description\r\n         * Fired when an **error occurs** during transition. It's important to note that if you\r\n         * have any errors in your resolve functions (javascript errors, non-existent services, etc)\r\n         * they will not throw traditionally. You must listen for this $stateChangeError event to\r\n         * catch **ALL** errors.\r\n         *\r\n         * @param {Object} event Event object.\r\n         * @param {State} toState The state being transitioned to.\r\n         * @param {Object} toParams The params supplied to the `toState`.\r\n         * @param {State} fromState The current state, pre-transition.\r\n         * @param {Object} fromParams The params supplied to the `fromState`.\r\n         * @param {Error} error The resolve error object.\r\n         */\r\n        evt = $rootScope.$broadcast('$stateChangeError', to.self, toParams, from.self, fromParams, error);\r\n\r\n        if (!evt.defaultPrevented) {\r\n            $urlRouter.update();\r\n        }\r\n\r\n        return $q.reject(error);\r\n      });\r\n\r\n      return transition;\r\n    };\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name ui.router.state.$state#is\r\n     * @methodOf ui.router.state.$state\r\n     *\r\n     * @description\r\n     * Similar to {@link ui.router.state.$state#methods_includes $state.includes},\r\n     * but only checks for the full state name. If params is supplied then it will be\r\n     * tested for strict equality against the current active params object, so all params\r\n     * must match with none missing and no extras.\r\n     *\r\n     * @example\r\n     * <pre>\r\n     * $state.$current.name = 'contacts.details.item';\r\n     *\r\n     * // absolute name\r\n     * $state.is('contact.details.item'); // returns true\r\n     * $state.is(contactDetailItemStateObject); // returns true\r\n     *\r\n     * // relative name (. and ^), typically from a template\r\n     * // E.g. from the 'contacts.details' template\r\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\r\n     * </pre>\r\n     *\r\n     * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.\r\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like\r\n     * to test against the current active state.\r\n     * @param {object=} options An options object.  The options are:\r\n     *\r\n     * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will\r\n     * test relative to `options.relative` state (or name).\r\n     *\r\n     * @returns {boolean} Returns true if it is the state.\r\n     */\r\n    $state.is = function is(stateOrName, params, options) {\r\n      options = extend({ relative: $state.$current }, options || {});\r\n      var state = findState(stateOrName, options.relative);\r\n\r\n      if (!isDefined(state)) { return undefined; }\r\n      if ($state.$current !== state) { return false; }\r\n      return params ? equalForKeys(state.params.$$values(params), $stateParams) : true;\r\n    };\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name ui.router.state.$state#includes\r\n     * @methodOf ui.router.state.$state\r\n     *\r\n     * @description\r\n     * A method to determine if the current active state is equal to or is the child of the\r\n     * state stateName. If any params are passed then they will be tested for a match as well.\r\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\r\n     *\r\n     * @example\r\n     * Partial and relative names\r\n     * <pre>\r\n     * $state.$current.name = 'contacts.details.item';\r\n     *\r\n     * // Using partial names\r\n     * $state.includes(\"contacts\"); // returns true\r\n     * $state.includes(\"contacts.details\"); // returns true\r\n     * $state.includes(\"contacts.details.item\"); // returns true\r\n     * $state.includes(\"contacts.list\"); // returns false\r\n     * $state.includes(\"about\"); // returns false\r\n     *\r\n     * // Using relative names (. and ^), typically from a template\r\n     * // E.g. from the 'contacts.details' template\r\n     * <div ng-class=\"{highlighted: $state.includes('.item')}\">Item</div>\r\n     * </pre>\r\n     *\r\n     * Basic globbing patterns\r\n     * <pre>\r\n     * $state.$current.name = 'contacts.details.item.url';\r\n     *\r\n     * $state.includes(\"*.details.*.*\"); // returns true\r\n     * $state.includes(\"*.details.**\"); // returns true\r\n     * $state.includes(\"**.item.**\"); // returns true\r\n     * $state.includes(\"*.details.item.url\"); // returns true\r\n     * $state.includes(\"*.details.*.url\"); // returns true\r\n     * $state.includes(\"*.details.*\"); // returns false\r\n     * $state.includes(\"item.**\"); // returns false\r\n     * </pre>\r\n     *\r\n     * @param {string} stateOrName A partial name, relative name, or glob pattern\r\n     * to be searched for within the current state name.\r\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`,\r\n     * that you'd like to test against the current active state.\r\n     * @param {object=} options An options object.  The options are:\r\n     *\r\n     * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,\r\n     * .includes will test relative to `options.relative` state (or name).\r\n     *\r\n     * @returns {boolean} Returns true if it does include the state\r\n     */\r\n    $state.includes = function includes(stateOrName, params, options) {\r\n      options = extend({ relative: $state.$current }, options || {});\r\n      if (isString(stateOrName) && isGlob(stateOrName)) {\r\n        if (!doesStateMatchGlob(stateOrName)) {\r\n          return false;\r\n        }\r\n        stateOrName = $state.$current.name;\r\n      }\r\n\r\n      var state = findState(stateOrName, options.relative);\r\n      if (!isDefined(state)) { return undefined; }\r\n      if (!isDefined($state.$current.includes[state.name])) { return false; }\r\n      return params ? equalForKeys(state.params.$$values(params), $stateParams, objectKeys(params)) : true;\r\n    };\r\n\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name ui.router.state.$state#href\r\n     * @methodOf ui.router.state.$state\r\n     *\r\n     * @description\r\n     * A url generation method that returns the compiled url for the given state populated with the given params.\r\n     *\r\n     * @example\r\n     * <pre>\r\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\r\n     * </pre>\r\n     *\r\n     * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.\r\n     * @param {object=} params An object of parameter values to fill the state's required parameters.\r\n     * @param {object=} options Options object. The options are:\r\n     *\r\n     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\r\n     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka\r\n     *    ancestor with a valid url).\r\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\r\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \r\n     *    defines which state to be relative from.\r\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\r\n     * \r\n     * @returns {string} compiled state url\r\n     */\r\n    $state.href = function href(stateOrName, params, options) {\r\n      options = extend({\r\n        lossy:    true,\r\n        inherit:  true,\r\n        absolute: false,\r\n        relative: $state.$current\r\n      }, options || {});\r\n\r\n      var state = findState(stateOrName, options.relative);\r\n\r\n      if (!isDefined(state)) return null;\r\n      if (options.inherit) params = inheritParams($stateParams, params || {}, $state.$current, state);\r\n      \r\n      var nav = (state && options.lossy) ? state.navigable : state;\r\n\r\n      if (!nav || nav.url === undefined || nav.url === null) {\r\n        return null;\r\n      }\r\n      return $urlRouter.href(nav.url, filterByKeys(state.params.$$keys(), params || {}), {\r\n        absolute: options.absolute\r\n      });\r\n    };\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name ui.router.state.$state#get\r\n     * @methodOf ui.router.state.$state\r\n     *\r\n     * @description\r\n     * Returns the state configuration object for any specific state or all states.\r\n     *\r\n     * @param {string|object=} stateOrName (absolute or relative) If provided, will only get the config for\r\n     * the requested state. If not provided, returns an array of ALL state configs.\r\n     * @param {string|object=} context When stateOrName is a relative state reference, the state will be retrieved relative to context.\r\n     * @returns {Object|Array} State configuration object or array of all objects.\r\n     */\r\n    $state.get = function (stateOrName, context) {\r\n      if (arguments.length === 0) return map(objectKeys(states), function(name) { return states[name].self; });\r\n      var state = findState(stateOrName, context || $state.$current);\r\n      return (state && state.self) ? state.self : null;\r\n    };\r\n\r\n    function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {\r\n      // Make a restricted $stateParams with only the parameters that apply to this state if\r\n      // necessary. In addition to being available to the controller and onEnter/onExit callbacks,\r\n      // we also need $stateParams to be available for any $injector calls we make during the\r\n      // dependency resolution process.\r\n      var $stateParams = (paramsAreFiltered) ? params : filterByKeys(state.params.$$keys(), params);\r\n      var locals = { $stateParams: $stateParams };\r\n\r\n      // Resolve 'global' dependencies for the state, i.e. those not specific to a view.\r\n      // We're also including $stateParams in this; that way the parameters are restricted\r\n      // to the set that should be visible to the state, and are independent of when we update\r\n      // the global $state and $stateParams values.\r\n      dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);\r\n      var promises = [dst.resolve.then(function (globals) {\r\n        dst.globals = globals;\r\n      })];\r\n      if (inherited) promises.push(inherited);\r\n\r\n      // Resolve template and dependencies for all views.\r\n      forEach(state.views, function (view, name) {\r\n        var injectables = (view.resolve && view.resolve !== state.resolve ? view.resolve : {});\r\n        injectables.$template = [ function () {\r\n          return $view.load(name, { view: view, locals: locals, params: $stateParams, notify: options.notify }) || '';\r\n        }];\r\n\r\n        promises.push($resolve.resolve(injectables, locals, dst.resolve, state).then(function (result) {\r\n          // References to the controller (only instantiated at link time)\r\n          if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {\r\n            var injectLocals = angular.extend({}, injectables, locals);\r\n            result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals);\r\n          } else {\r\n            result.$$controller = view.controller;\r\n          }\r\n          // Provide access to the state itself for internal use\r\n          result.$$state = state;\r\n          result.$$controllerAs = view.controllerAs;\r\n          dst[name] = result;\r\n        }));\r\n      });\r\n\r\n      // Wait for all the promises and then return the activation object\r\n      return $q.all(promises).then(function (values) {\r\n        return dst;\r\n      });\r\n    }\r\n\r\n    return $state;\r\n  }\r\n\r\n  function shouldTriggerReload(to, from, locals, options) {\r\n    if (to === from && ((locals === from.locals && !options.reload) || (to.self.reloadOnSearch === false))) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nangular.module('ui.router.state')\r\n  .value('$stateParams', {})\r\n  .provider('$state', $StateProvider);\r\n\r\n\r\n$ViewProvider.$inject = [];\r\nfunction $ViewProvider() {\r\n\r\n  this.$get = $get;\r\n  /**\r\n   * @ngdoc object\r\n   * @name ui.router.state.$view\r\n   *\r\n   * @requires ui.router.util.$templateFactory\r\n   * @requires $rootScope\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  $get.$inject = ['$rootScope', '$templateFactory'];\r\n  function $get(   $rootScope,   $templateFactory) {\r\n    return {\r\n      // $view.load('full.viewName', { template: ..., controller: ..., resolve: ..., async: false, params: ... })\r\n      /**\r\n       * @ngdoc function\r\n       * @name ui.router.state.$view#load\r\n       * @methodOf ui.router.state.$view\r\n       *\r\n       * @description\r\n       *\r\n       * @param {string} name name\r\n       * @param {object} options option object.\r\n       */\r\n      load: function load(name, options) {\r\n        var result, defaults = {\r\n          template: null, controller: null, view: null, locals: null, notify: true, async: true, params: {}\r\n        };\r\n        options = extend(defaults, options);\r\n\r\n        if (options.view) {\r\n          result = $templateFactory.fromConfig(options.view, options.params, options.locals);\r\n        }\r\n        if (result && options.notify) {\r\n        /**\r\n         * @ngdoc event\r\n         * @name ui.router.state.$state#$viewContentLoading\r\n         * @eventOf ui.router.state.$view\r\n         * @eventType broadcast on root scope\r\n         * @description\r\n         *\r\n         * Fired once the view **begins loading**, *before* the DOM is rendered.\r\n         *\r\n         * @param {Object} event Event object.\r\n         * @param {Object} viewConfig The view config properties (template, controller, etc).\r\n         *\r\n         * @example\r\n         *\r\n         * <pre>\r\n         * $scope.$on('$viewContentLoading',\r\n         * function(event, viewConfig){\r\n         *     // Access to all the view config properties.\r\n         *     // and one special property 'targetView'\r\n         *     // viewConfig.targetView\r\n         * });\r\n         * </pre>\r\n         */\r\n          $rootScope.$broadcast('$viewContentLoading', options);\r\n        }\r\n        return result;\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nangular.module('ui.router.state').provider('$view', $ViewProvider);\r\n\r\n/**\r\n * @ngdoc object\r\n * @name ui.router.state.$uiViewScrollProvider\r\n *\r\n * @description\r\n * Provider that returns the {@link ui.router.state.$uiViewScroll} service function.\r\n */\r\nfunction $ViewScrollProvider() {\r\n\r\n  var useAnchorScroll = false;\r\n\r\n  /**\r\n   * @ngdoc function\r\n   * @name ui.router.state.$uiViewScrollProvider#useAnchorScroll\r\n   * @methodOf ui.router.state.$uiViewScrollProvider\r\n   *\r\n   * @description\r\n   * Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for\r\n   * scrolling based on the url anchor.\r\n   */\r\n  this.useAnchorScroll = function () {\r\n    useAnchorScroll = true;\r\n  };\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name ui.router.state.$uiViewScroll\r\n   *\r\n   * @requires $anchorScroll\r\n   * @requires $timeout\r\n   *\r\n   * @description\r\n   * When called with a jqLite element, it scrolls the element into view (after a\r\n   * `$timeout` so the DOM has time to refresh).\r\n   *\r\n   * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\r\n   * this can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.\r\n   */\r\n  this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {\r\n    if (useAnchorScroll) {\r\n      return $anchorScroll;\r\n    }\r\n\r\n    return function ($element) {\r\n      $timeout(function () {\r\n        $element[0].scrollIntoView();\r\n      }, 0, false);\r\n    };\r\n  }];\r\n}\r\n\r\nangular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\r\n\r\n/**\r\n * @ngdoc directive\r\n * @name ui.router.state.directive:ui-view\r\n *\r\n * @requires ui.router.state.$state\r\n * @requires $compile\r\n * @requires $controller\r\n * @requires $injector\r\n * @requires ui.router.state.$uiViewScroll\r\n * @requires $document\r\n *\r\n * @restrict ECA\r\n *\r\n * @description\r\n * The ui-view directive tells $state where to place your templates.\r\n *\r\n * @param {string=} name A view name. The name should be unique amongst the other views in the\r\n * same state. You can have views of the same name that live in different states.\r\n *\r\n * @param {string=} autoscroll It allows you to set the scroll behavior of the browser window\r\n * when a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll\r\n * service, {@link ui.router.state.$uiViewScroll}. This custom service let's you\r\n * scroll ui-view elements into view when they are populated during a state activation.\r\n *\r\n * *Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)\r\n * functionality, call `$uiViewScrollProvider.useAnchorScroll()`.*\r\n *\r\n * @param {string=} onload Expression to evaluate whenever the view updates.\r\n * \r\n * @example\r\n * A view can be unnamed or named. \r\n * <pre>\r\n * <!-- Unnamed -->\r\n * <div ui-view></div> \r\n * \r\n * <!-- Named -->\r\n * <div ui-view=\"viewName\"></div>\r\n * </pre>\r\n *\r\n * You can only have one unnamed view within any template (or root html). If you are only using a \r\n * single view and it is unnamed then you can populate it like so:\r\n * <pre>\r\n * <div ui-view></div> \r\n * $stateProvider.state(\"home\", {\r\n *   template: \"<h1>HELLO!</h1>\"\r\n * })\r\n * </pre>\r\n * \r\n * The above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#views `views`}\r\n * config property, by name, in this case an empty name:\r\n * <pre>\r\n * $stateProvider.state(\"home\", {\r\n *   views: {\r\n *     \"\": {\r\n *       template: \"<h1>HELLO!</h1>\"\r\n *     }\r\n *   }    \r\n * })\r\n * </pre>\r\n * \r\n * But typically you'll only use the views property if you name your view or have more than one view \r\n * in the same template. There's not really a compelling reason to name a view if its the only one, \r\n * but you could if you wanted, like so:\r\n * <pre>\r\n * <div ui-view=\"main\"></div>\r\n * </pre> \r\n * <pre>\r\n * $stateProvider.state(\"home\", {\r\n *   views: {\r\n *     \"main\": {\r\n *       template: \"<h1>HELLO!</h1>\"\r\n *     }\r\n *   }    \r\n * })\r\n * </pre>\r\n * \r\n * Really though, you'll use views to set up multiple views:\r\n * <pre>\r\n * <div ui-view></div>\r\n * <div ui-view=\"chart\"></div> \r\n * <div ui-view=\"data\"></div> \r\n * </pre>\r\n * \r\n * <pre>\r\n * $stateProvider.state(\"home\", {\r\n *   views: {\r\n *     \"\": {\r\n *       template: \"<h1>HELLO!</h1>\"\r\n *     },\r\n *     \"chart\": {\r\n *       template: \"<chart_thing/>\"\r\n *     },\r\n *     \"data\": {\r\n *       template: \"<data_thing/>\"\r\n *     }\r\n *   }    \r\n * })\r\n * </pre>\r\n *\r\n * Examples for `autoscroll`:\r\n *\r\n * <pre>\r\n * <!-- If autoscroll present with no expression,\r\n *      then scroll ui-view into view -->\r\n * <ui-view autoscroll/>\r\n *\r\n * <!-- If autoscroll present with valid expression,\r\n *      then scroll ui-view into view if expression evaluates to true -->\r\n * <ui-view autoscroll='true'/>\r\n * <ui-view autoscroll='false'/>\r\n * <ui-view autoscroll='scopeVariable'/>\r\n * </pre>\r\n */\r\n$ViewDirective.$inject = ['$state', '$injector', '$uiViewScroll', '$interpolate'];\r\nfunction $ViewDirective(   $state,   $injector,   $uiViewScroll,   $interpolate) {\r\n\r\n  function getService() {\r\n    return ($injector.has) ? function(service) {\r\n      return $injector.has(service) ? $injector.get(service) : null;\r\n    } : function(service) {\r\n      try {\r\n        return $injector.get(service);\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    };\r\n  }\r\n\r\n  var service = getService(),\r\n      $animator = service('$animator'),\r\n      $animate = service('$animate');\r\n\r\n  // Returns a set of DOM manipulation functions based on which Angular version\r\n  // it should use\r\n  function getRenderer(attrs, scope) {\r\n    var statics = function() {\r\n      return {\r\n        enter: function (element, target, cb) { target.after(element); cb(); },\r\n        leave: function (element, cb) { element.remove(); cb(); }\r\n      };\r\n    };\r\n\r\n    if ($animate) {\r\n      return {\r\n        enter: function(element, target, cb) {\r\n          var promise = $animate.enter(element, null, target, cb);\r\n          if (promise && promise.then) promise.then(cb);\r\n        },\r\n        leave: function(element, cb) {\r\n          var promise = $animate.leave(element, cb);\r\n          if (promise && promise.then) promise.then(cb);\r\n        }\r\n      };\r\n    }\r\n\r\n    if ($animator) {\r\n      var animate = $animator && $animator(scope, attrs);\r\n\r\n      return {\r\n        enter: function(element, target, cb) {animate.enter(element, null, target); cb(); },\r\n        leave: function(element, cb) { animate.leave(element); cb(); }\r\n      };\r\n    }\r\n\r\n    return statics();\r\n  }\r\n\r\n  var directive = {\r\n    restrict: 'ECA',\r\n    terminal: true,\r\n    priority: 400,\r\n    transclude: 'element',\r\n    compile: function (tElement, tAttrs, $transclude) {\r\n      return function (scope, $element, attrs) {\r\n        var previousEl, currentEl, currentScope, latestLocals,\r\n            onloadExp     = attrs.onload || '',\r\n            autoScrollExp = attrs.autoscroll,\r\n            renderer      = getRenderer(attrs, scope);\r\n\r\n        scope.$on('$stateChangeSuccess', function() {\r\n          updateView(false);\r\n        });\r\n        scope.$on('$viewContentLoading', function() {\r\n          updateView(false);\r\n        });\r\n\r\n        updateView(true);\r\n\r\n        function cleanupLastView() {\r\n          if (previousEl) {\r\n            previousEl.remove();\r\n            previousEl = null;\r\n          }\r\n\r\n          if (currentScope) {\r\n            currentScope.$destroy();\r\n            currentScope = null;\r\n          }\r\n\r\n          if (currentEl) {\r\n            renderer.leave(currentEl, function() {\r\n              previousEl = null;\r\n            });\r\n\r\n            previousEl = currentEl;\r\n            currentEl = null;\r\n          }\r\n        }\r\n\r\n        function updateView(firstTime) {\r\n          var newScope,\r\n              name            = getUiViewName(scope, attrs, $element, $interpolate),\r\n              previousLocals  = name && $state.$current && $state.$current.locals[name];\r\n\r\n          if (!firstTime && previousLocals === latestLocals) return; // nothing to do\r\n          newScope = scope.$new();\r\n          latestLocals = $state.$current.locals[name];\r\n\r\n          var clone = $transclude(newScope, function(clone) {\r\n            renderer.enter(clone, $element, function onUiViewEnter() {\r\n              if(currentScope) {\r\n                currentScope.$emit('$viewContentAnimationEnded');\r\n              }\r\n\r\n              if (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\r\n                $uiViewScroll(clone);\r\n              }\r\n            });\r\n            cleanupLastView();\r\n          });\r\n\r\n          currentEl = clone;\r\n          currentScope = newScope;\r\n          /**\r\n           * @ngdoc event\r\n           * @name ui.router.state.directive:ui-view#$viewContentLoaded\r\n           * @eventOf ui.router.state.directive:ui-view\r\n           * @eventType emits on ui-view directive scope\r\n           * @description           *\r\n           * Fired once the view is **loaded**, *after* the DOM is rendered.\r\n           *\r\n           * @param {Object} event Event object.\r\n           */\r\n          currentScope.$emit('$viewContentLoaded');\r\n          currentScope.$eval(onloadExp);\r\n        }\r\n      };\r\n    }\r\n  };\r\n\r\n  return directive;\r\n}\r\n\r\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$state', '$interpolate'];\r\nfunction $ViewDirectiveFill (  $compile,   $controller,   $state,   $interpolate) {\r\n  return {\r\n    restrict: 'ECA',\r\n    priority: -400,\r\n    compile: function (tElement) {\r\n      var initial = tElement.html();\r\n      return function (scope, $element, attrs) {\r\n        var current = $state.$current,\r\n            name = getUiViewName(scope, attrs, $element, $interpolate),\r\n            locals  = current && current.locals[name];\r\n\r\n        if (! locals) {\r\n          return;\r\n        }\r\n\r\n        $element.data('$uiView', { name: name, state: locals.$$state });\r\n        $element.html(locals.$template ? locals.$template : initial);\r\n\r\n        var link = $compile($element.contents());\r\n\r\n        if (locals.$$controller) {\r\n          locals.$scope = scope;\r\n          var controller = $controller(locals.$$controller, locals);\r\n          if (locals.$$controllerAs) {\r\n            scope[locals.$$controllerAs] = controller;\r\n          }\r\n          $element.data('$ngControllerController', controller);\r\n          $element.children().data('$ngControllerController', controller);\r\n        }\r\n\r\n        link(scope);\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Shared ui-view code for both directives:\r\n * Given scope, element, and its attributes, return the view's name\r\n */\r\nfunction getUiViewName(scope, attrs, element, $interpolate) {\r\n  var name = $interpolate(attrs.uiView || attrs.name || '')(scope);\r\n  var inherited = element.inheritedData('$uiView');\r\n  return name.indexOf('@') >= 0 ?  name :  (name + '@' + (inherited ? inherited.state.name : ''));\r\n}\r\n\r\nangular.module('ui.router.state').directive('uiView', $ViewDirective);\r\nangular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\r\n\r\nfunction parseStateRef(ref, current) {\r\n  var preparsed = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\r\n  if (preparsed) ref = current + '(' + preparsed[1] + ')';\r\n  parsed = ref.replace(/\\n/g, \" \").match(/^([^(]+?)\\s*(\\((.*)\\))?$/);\r\n  if (!parsed || parsed.length !== 4) throw new Error(\"Invalid state ref '\" + ref + \"'\");\r\n  return { state: parsed[1], paramExpr: parsed[3] || null };\r\n}\r\n\r\nfunction stateContext(el) {\r\n  var stateData = el.parent().inheritedData('$uiView');\r\n\r\n  if (stateData && stateData.state && stateData.state.name) {\r\n    return stateData.state;\r\n  }\r\n}\r\n\r\n/**\r\n * @ngdoc directive\r\n * @name ui.router.state.directive:ui-sref\r\n *\r\n * @requires ui.router.state.$state\r\n * @requires $timeout\r\n *\r\n * @restrict A\r\n *\r\n * @description\r\n * A directive that binds a link (`<a>` tag) to a state. If the state has an associated \r\n * URL, the directive will automatically generate & update the `href` attribute via \r\n * the {@link ui.router.state.$state#methods_href $state.href()} method. Clicking \r\n * the link will trigger a state transition with optional parameters. \r\n *\r\n * Also middle-clicking, right-clicking, and ctrl-clicking on the link will be \r\n * handled natively by the browser.\r\n *\r\n * You can also use relative state paths within ui-sref, just like the relative \r\n * paths passed to `$state.go()`. You just need to be aware that the path is relative\r\n * to the state that the link lives in, in other words the state that loaded the \r\n * template containing the link.\r\n *\r\n * You can specify options to pass to {@link ui.router.state.$state#go $state.go()}\r\n * using the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,\r\n * and `reload`.\r\n *\r\n * @example\r\n * Here's an example of how you'd use ui-sref and how it would compile. If you have the \r\n * following template:\r\n * <pre>\r\n * <a ui-sref=\"home\">Home</a> | <a ui-sref=\"about\">About</a> | <a ui-sref=\"{page: 2}\">Next page</a>\r\n * \r\n * <ul>\r\n *     <li ng-repeat=\"contact in contacts\">\r\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\r\n *     </li>\r\n * </ul>\r\n * </pre>\r\n * \r\n * Then the compiled html would be (assuming Html5Mode is off and current state is contacts):\r\n * <pre>\r\n * <a href=\"#/home\" ui-sref=\"home\">Home</a> | <a href=\"#/about\" ui-sref=\"about\">About</a> | <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\r\n * \r\n * <ul>\r\n *     <li ng-repeat=\"contact in contacts\">\r\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\r\n *     </li>\r\n *     <li ng-repeat=\"contact in contacts\">\r\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\r\n *     </li>\r\n *     <li ng-repeat=\"contact in contacts\">\r\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\r\n *     </li>\r\n * </ul>\r\n *\r\n * <a ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\r\n * </pre>\r\n *\r\n * @param {string} ui-sref 'stateName' can be any valid absolute or relative state\r\n * @param {Object} ui-sref-opts options to pass to {@link ui.router.state.$state#go $state.go()}\r\n */\r\n$StateRefDirective.$inject = ['$state', '$timeout'];\r\nfunction $StateRefDirective($state, $timeout) {\r\n  var allowedOptions = ['location', 'inherit', 'reload'];\r\n\r\n  return {\r\n    restrict: 'A',\r\n    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\r\n    link: function(scope, element, attrs, uiSrefActive) {\r\n      var ref = parseStateRef(attrs.uiSref, $state.current.name);\r\n      var params = null, url = null, base = stateContext(element) || $state.$current;\r\n      var newHref = null, isAnchor = element.prop(\"tagName\") === \"A\";\r\n      var isForm = element[0].nodeName === \"FORM\";\r\n      var attr = isForm ? \"action\" : \"href\", nav = true;\r\n\r\n      var options = { relative: base, inherit: true };\r\n      var optionsOverride = scope.$eval(attrs.uiSrefOpts) || {};\r\n\r\n      angular.forEach(allowedOptions, function(option) {\r\n        if (option in optionsOverride) {\r\n          options[option] = optionsOverride[option];\r\n        }\r\n      });\r\n\r\n      var update = function(newVal) {\r\n        if (newVal) params = angular.copy(newVal);\r\n        if (!nav) return;\r\n\r\n        newHref = $state.href(ref.state, params, options);\r\n\r\n        var activeDirective = uiSrefActive[1] || uiSrefActive[0];\r\n        if (activeDirective) {\r\n          activeDirective.$$setStateInfo(ref.state, params);\r\n        }\r\n        if (newHref === null) {\r\n          nav = false;\r\n          return false;\r\n        }\r\n        attrs.$set(attr, newHref);\r\n      };\r\n\r\n      if (ref.paramExpr) {\r\n        scope.$watch(ref.paramExpr, function(newVal, oldVal) {\r\n          if (newVal !== params) update(newVal);\r\n        }, true);\r\n        params = angular.copy(scope.$eval(ref.paramExpr));\r\n      }\r\n      update();\r\n\r\n      if (isForm) return;\r\n\r\n      element.bind(\"click\", function(e) {\r\n        var button = e.which || e.button;\r\n        if ( !(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || element.attr('target')) ) {\r\n          // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\r\n          var transition = $timeout(function() {\r\n            $state.go(ref.state, params, options);\r\n          });\r\n          e.preventDefault();\r\n\r\n          // if the state has no URL, ignore one preventDefault from the <a> directive.\r\n          var ignorePreventDefaultCount = isAnchor && !newHref ? 1: 0;\r\n          e.preventDefault = function() {\r\n            if (ignorePreventDefaultCount-- <= 0)\r\n              $timeout.cancel(transition);\r\n          };\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * @ngdoc directive\r\n * @name ui.router.state.directive:ui-sref-active\r\n *\r\n * @requires ui.router.state.$state\r\n * @requires ui.router.state.$stateParams\r\n * @requires $interpolate\r\n *\r\n * @restrict A\r\n *\r\n * @description\r\n * A directive working alongside ui-sref to add classes to an element when the\r\n * related ui-sref directive's state is active, and removing them when it is inactive.\r\n * The primary use-case is to simplify the special appearance of navigation menus\r\n * relying on `ui-sref`, by having the \"active\" state's menu button appear different,\r\n * distinguishing it from the inactive menu items.\r\n *\r\n * ui-sref-active can live on the same element as ui-sref or on a parent element. The first\r\n * ui-sref-active found at the same level or above the ui-sref will be used.\r\n *\r\n * Will activate when the ui-sref's target state or any child state is active. If you\r\n * need to activate only when the ui-sref target state is active and *not* any of\r\n * it's children, then you will use\r\n * {@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}\r\n *\r\n * @example\r\n * Given the following template:\r\n * <pre>\r\n * <ul>\r\n *   <li ui-sref-active=\"active\" class=\"item\">\r\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\r\n *   </li>\r\n * </ul>\r\n * </pre>\r\n *\r\n *\r\n * When the app state is \"app.user\" (or any children states), and contains the state parameter \"user\" with value \"bilbobaggins\",\r\n * the resulting HTML will appear as (note the 'active' class):\r\n * <pre>\r\n * <ul>\r\n *   <li ui-sref-active=\"active\" class=\"item active\">\r\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\r\n *   </li>\r\n * </ul>\r\n * </pre>\r\n *\r\n * The class name is interpolated **once** during the directives link time (any further changes to the\r\n * interpolated value are ignored).\r\n *\r\n * Multiple classes may be specified in a space-separated format:\r\n * <pre>\r\n * <ul>\r\n *   <li ui-sref-active='class1 class2 class3'>\r\n *     <a ui-sref=\"app.user\">link</a>\r\n *   </li>\r\n * </ul>\r\n * </pre>\r\n */\r\n\r\n/**\r\n * @ngdoc directive\r\n * @name ui.router.state.directive:ui-sref-active-eq\r\n *\r\n * @requires ui.router.state.$state\r\n * @requires ui.router.state.$stateParams\r\n * @requires $interpolate\r\n *\r\n * @restrict A\r\n *\r\n * @description\r\n * The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate\r\n * when the exact target state used in the `ui-sref` is active; no child states.\r\n *\r\n */\r\n$StateRefActiveDirective.$inject = ['$state', '$stateParams', '$interpolate'];\r\nfunction $StateRefActiveDirective($state, $stateParams, $interpolate) {\r\n  return  {\r\n    restrict: \"A\",\r\n    controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {\r\n      var state, params, activeClass;\r\n\r\n      // There probably isn't much point in $observing this\r\n      // uiSrefActive and uiSrefActiveEq share the same directive object with some\r\n      // slight difference in logic routing\r\n      activeClass = $interpolate($attrs.uiSrefActiveEq || $attrs.uiSrefActive || '', false)($scope);\r\n\r\n      // Allow uiSref to communicate with uiSrefActive[Equals]\r\n      this.$$setStateInfo = function (newState, newParams) {\r\n        state = $state.get(newState, stateContext($element));\r\n        params = newParams;\r\n        update();\r\n      };\r\n\r\n      $scope.$on('$stateChangeSuccess', update);\r\n\r\n      // Update route state\r\n      function update() {\r\n        if (isMatch()) {\r\n          $element.addClass(activeClass);\r\n        } else {\r\n          $element.removeClass(activeClass);\r\n        }\r\n      }\r\n\r\n      function isMatch() {\r\n        if (typeof $attrs.uiSrefActiveEq !== 'undefined') {\r\n          return state && $state.is(state.name, params);\r\n        } else {\r\n          return state && $state.includes(state.name, params);\r\n        }\r\n      }\r\n    }]\r\n  };\r\n}\r\n\r\nangular.module('ui.router.state')\r\n  .directive('uiSref', $StateRefDirective)\r\n  .directive('uiSrefActive', $StateRefActiveDirective)\r\n  .directive('uiSrefActiveEq', $StateRefActiveDirective);\r\n\r\n/**\r\n * @ngdoc filter\r\n * @name ui.router.state.filter:isState\r\n *\r\n * @requires ui.router.state.$state\r\n *\r\n * @description\r\n * Translates to {@link ui.router.state.$state#methods_is $state.is(\"stateName\")}.\r\n */\r\n$IsStateFilter.$inject = ['$state'];\r\nfunction $IsStateFilter($state) {\r\n  var isFilter = function (state) {\r\n    return $state.is(state);\r\n  };\r\n  isFilter.$stateful = true;\r\n  return isFilter;\r\n}\r\n\r\n/**\r\n * @ngdoc filter\r\n * @name ui.router.state.filter:includedByState\r\n *\r\n * @requires ui.router.state.$state\r\n *\r\n * @description\r\n * Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.\r\n */\r\n$IncludedByStateFilter.$inject = ['$state'];\r\nfunction $IncludedByStateFilter($state) {\r\n  var includesFilter = function (state) {\r\n    return $state.includes(state);\r\n  };\r\n  includesFilter.$stateful = true;\r\n  return  includesFilter;\r\n}\r\n\r\nangular.module('ui.router.state')\r\n  .filter('isState', $IsStateFilter)\r\n  .filter('includedByState', $IncludedByStateFilter);\r\n})(window, window.angular);"]}